[{"C:\\Users\\dwfs\\Projects\\react_qrcode_generation_scanner\\src\\index.js":"1","C:\\Users\\dwfs\\Projects\\react_qrcode_generation_scanner\\src\\reportWebVitals.js":"2","C:\\Users\\dwfs\\Projects\\react_qrcode_generation_scanner\\src\\App.js":"3"},{"size":517,"mtime":1642961421029,"results":"4","hashOfConfig":"5"},{"size":375,"mtime":1642961421035,"results":"6","hashOfConfig":"5"},{"size":5284,"mtime":1643220599084,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1x7y63r",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\dwfs\\Projects\\react_qrcode_generation_scanner\\src\\index.js",[],["16","17"],"C:\\Users\\dwfs\\Projects\\react_qrcode_generation_scanner\\src\\reportWebVitals.js",[],"C:\\Users\\dwfs\\Projects\\react_qrcode_generation_scanner\\src\\App.js",["18","19","20","21"],"import React, {useState, useRef} from 'react';\r\nimport {Container, Card, CardContent, makeStyles, Grid, TextField, Button} from '@material-ui/core';\r\nimport QRCode from 'qrcode';\r\nimport QrReader from 'react-qr-reader';\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getDatabase, set, ref, child, push } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey:\r\n    \"AAAAplipsUI:APA91bGQbCDPCuHA-XQRVNJRvYysIqzPqJ4JXk4d9iowYwHgCel81VZCQYqgdqEQaVX2qGWmwyLjGrnkpKtAs56LhlFZaCdRHZMpn9XVLcxtEc7c5GeiD-uMuibIkDFAQVpfV7mtFduP\",\r\n  authDomain: \"summerjob-9c9bf.firebaseapp.com\",\r\n  // For databases not in the us-central1 location, databaseURL will be of the\r\n  // form https://[databaseName].[region].firebasedatabase.app.\r\n  // For example, https://your-database-123.europe-west1.firebasedatabase.app\r\n  databaseURL: \"https://summerjob-9c9bf-default-rtdb.firebaseio.com/\",\r\n  storageBucket: \"bucket.appspot.com\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Get a reference to the database service\r\nconst database = getDatabase(app);\r\n\r\nfunction App() {\r\n  const [text, setText] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [scanResultFile, setScanResultFile] = useState(\"\");\r\n  const [scanResultWebCam, setScanResultWebCam] = useState(\"\");\r\n  const classes = useStyles();\r\n  const qrRef = useRef(null);\r\n\r\n  const generateQrCode = async () => {\r\n    try {\r\n      const response = await QRCode.toDataURL(text);\r\n      setImageUrl(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const handleErrorFile = (error) => {\r\n    console.log(error);\r\n  };\r\n  const handleScanFile = (result) => {\r\n    if (result) {\r\n      const newPostKey = push(child(ref(database), \"ativos\")).key;\r\n\r\n      set(ref(database, `ativos/${newPostKey}`), \r\n        JSON.parse(result),\r\n      );\r\n\r\n      setScanResultFile(result);\r\n    }\r\n  };\r\n  const onScanFile = () => {\r\n    qrRef.current.openImageDialog();\r\n  };\r\n  const handleErrorWebCam = (error) => {\r\n    console.log(error);\r\n  };\r\n  const handleScanWebCam = (result) => {\r\n    if (result) {\r\n      setScanResultWebCam(result);\r\n    }\r\n  };\r\n\r\n  const submitOrder = () => {\r\n    const newPostKey = push(child(ref(database), \"ativos\")).key;\r\n\r\n    const parsedData= JSON.parse(JSON.parse(scanResultWebCam));\r\n\r\n    set(ref(database, `ativos/${newPostKey}`), {\r\n      ativo: parsedData[\"ativo\"],\r\n      tombamento: parsedData[\"tombamento\"],\r\n      unidade: parsedData[\"unidade\"],\r\n      setor: parsedData[\"setor\"],\r\n    });\r\n    setScanResultWebCam('');\r\n  }\r\n\r\n\r\n  return (\r\n    <Container className={classes.conatiner}>\r\n      <Card>\r\n        <h2 className={classes.title}>\r\n          Generate Download & Scan QR Code with React js\r\n        </h2>\r\n        <CardContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\r\n              <TextField\r\n                label=\"Enter Text Here\"\r\n                onChange={(e) => setText(e.target.value)}\r\n              />\r\n              <Button\r\n                className={classes.btn}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => generateQrCode()}\r\n              >\r\n                Generate\r\n              </Button>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              {imageUrl ? (\r\n                <a href={imageUrl} download>\r\n                  <img src={imageUrl} alt=\"img\" />\r\n                </a>\r\n              ) : null}\r\n            </Grid>\r\n            {/* <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\r\n              <Button\r\n                className={classes.btn}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={onScanFile}\r\n              >\r\n                Scan Qr Code\r\n              </Button>\r\n              <QrReader\r\n                ref={qrRef}\r\n                delay={300}\r\n                style={{ width: \"100%\" }}\r\n                onError={handleErrorFile}\r\n                onScan={handleScanFile}\r\n                legacyMode\r\n              />\r\n              <h3>Scanned Code: {scanResultFile}</h3>\r\n            </Grid> */}\r\n            <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\r\n              <h3>Qr Code Scan by Web Cam</h3>\r\n              <QrReader\r\n                delay={300}\r\n                style={{ width: \"100%\" }}\r\n                onError={handleErrorWebCam}\r\n                onScan={handleScanWebCam}\r\n              />\r\n              <h3>Scanned By WebCam Code: {scanResultWebCam}</h3>\r\n              <Button\r\n                className={classes.btn}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={submitOrder}\r\n              >\r\n                Submit OS\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    conatiner: {\r\n      marginTop: 10\r\n    },\r\n    title: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems:  'center',\r\n      background: '#3f51b5',\r\n      color: '#fff',\r\n      padding: 20\r\n    },\r\n    btn : {\r\n      marginTop: 10,\r\n      marginBottom: 20\r\n    }\r\n}));\r\nexport default App;\r\n",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":27,"column":10,"nodeType":"28","messageId":"29","endLine":27,"endColumn":24},{"ruleId":"26","severity":1,"message":"30","line":40,"column":9,"nodeType":"28","messageId":"29","endLine":40,"endColumn":24},{"ruleId":"26","severity":1,"message":"31","line":43,"column":9,"nodeType":"28","messageId":"29","endLine":43,"endColumn":23},{"ruleId":"26","severity":1,"message":"32","line":54,"column":9,"nodeType":"28","messageId":"29","endLine":54,"endColumn":19},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'scanResultFile' is assigned a value but never used.","Identifier","unusedVar","'handleErrorFile' is assigned a value but never used.","'handleScanFile' is assigned a value but never used.","'onScanFile' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]