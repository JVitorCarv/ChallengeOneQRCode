{"version":3,"sources":["styles.js","components/CreateQrcode.js","helper/constants.js","components/ReaderQrCode.js","components/Electric.js","components/Mechanical.js","components/Unidentified.js","components/Form.js","components/PmForm.js","components/SuccesForm.js","components/MenuHeader.js","components/Header.js","components/UseManual.js","components/AtivoDetails.js","App.js","reportWebVitals.js","index.js"],"names":["StyledHeader","styled","header","StyledManual","div","StyledScanQr","ButtonSecondary","Button","ButtonPrimary","StyledSuccesForm","StyledDetailsAtivo","CreateQRForm","StyledPMForm","StyledForm","initialState","ativo","ativo_description","id_alpha","serial","fabricante","site","posicao","status","tombamento","condicao","CreateQrCode","useState","imageUrl","setImageUrl","form","setForm","generateQrCode","a","QRCode","toDataURL","JSON","stringify","response","console","log","handleForm","data","name","value","target","className","href","download","src","alt","TextField","required","id","label","onChange","e","variant","multiline","nome","onClick","PREFIX_PATH","process","ReaderQrCode","navigate","useNavigate","delay","style","width","onError","error","onScan","result","parsed","parse","state","helperText","Electric","React","faltaEnergia","chaveFusivel","tensaoNormal","cheiroQueimado","setState","handleChange","event","obj","checked","natureForm","FormControl","sx","m","component","FormLabel","FormGroup","FormControlLabel","control","Checkbox","Mechanical","nivelSuccao","valvulaSuccao","valvulaRecalque","vibracaoAnormal","bombaTravada","barulhoAnormal","gaxetaVazamento","FormHelperText","Unidentified","description","placeholder","Form","attr","disabled","unidadeOperacional","maxRows","problemDescription","select","nature","map","tipo","MenuItem","handleNature","app","initializeApp","apiKey","authDomain","databaseURL","database","getDatabase","operatorName","operatorPhone","PmForm","useLocation","useEffect","newPostKey","push","child","ref","key","set","SuccesForm","srcImage","BasicMenu","anchorEl","setAnchorEl","open","Boolean","handleClose","handleRoute","route","IconButton","aria-controls","undefined","aria-haspopup","aria-expanded","currentTarget","Menu","onClose","clas","MenuListProps","Header","location","title","setTitle","deltaPng","pathname","UseManual","ContentLine","content","AtivoDetails","App","Container","padding","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c55684a.chunk.js","sourcesContent":["import { Button } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nexport const StyledHeader = styled.header`\n  background: #21419e;\n  width: 100%;\n  height: 56px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  .content {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    justify-content: space-between;\n    padding: 10px;\n\n    .content-left {\n      display: flex;\n      align-items: center;\n    }\n\n    .image-container {\n      cursor: pointer;\n      width: 40px;\n      height: 40px;\n      border: 1px #ffffff solid;\n      border-radius: 50%;\n      background: #ffffff;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      img {\n        width: 31px;\n        height: 31px;\n      }\n    }\n\n    .button-icon {\n      margin-right: 10px;\n      color: white;\n    }\n\n    h1 {\n      color: #ffffff;\n      font-family: Roboto;\n      font-style: normal;\n      font-weight: 500;\n      font-size: 20px;\n      margin: 0 0 0 10px;\n    }\n  }\n`;\n\nexport const StyledManual = styled.div`\n  font-family: Roboto;\n  font-style: normal;\n  padding: 35px;\n\n  h1 {\n    font-weight: 500;\n    font-size: 20px;\n    color: #000000;\n  }\n\n  p {\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 24px;\n    text-align: justify;\n    letter-spacing: 0.15px;\n    color: #1a1a1a;\n  }\n\n  .image-qr {\n    display: flex;\n    justify-content: center;\n\n    img {\n      width: 200px;\n      height: 149px;\n    }\n  }\n\n  .action-button {\n    display: flex;\n    justify-content: center;\n    margin-top: 40px;\n  }\n\n  .instructions {\n    h1 {\n      font-weight: bold;\n      font-size: 16px;\n      line-height: 24px;\n      text-align: justify;\n      letter-spacing: 0.15px;\n      color: #1a1a1a;\n    }\n    div {\n      display: flex;\n\n      span {\n        font-weight: bold;\n        font-size: 16px;\n        color: #1a1a1a;\n        margin-right: 10px;\n      }\n\n      p {\n        font-size: 16px;\n        line-height: 24px;\n        text-align: justify;\n        letter-spacing: 0.15px;\n        color: #1a1a1a;\n        margin: 0;\n      }\n    }\n  }\n`;\n\nexport const StyledScanQr = styled.div`\n  display: flex;\n  justify-content: center;\n  font-family: Roboto;\n  font-style: normal;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n\n  h1 {\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 24px;\n    text-align: center;\n    letter-spacing: 0.15px;\n    color: #1a1a1a;\n  }\n\n  section {\n    > div {\n      box-shadow: rgba(141, 197, 68, 1) 0px 0px 0px 5px inset !important;\n      width: 120% !important;\n      height: 120% !important;\n      left: -20px !important;\n      top: -20px !important;\n    }\n  }\n\n  .action-buttons {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 30px;\n\n    button {\n      margin: 10px;\n    }\n  }\n\n  .code-content {\n    margin-top: 20px;\n  }\n\n  .scan-qr {\n    display: flex;\n    justify-content: center;\n    width: 223px;\n    height: 223px;\n  }\n\n  .details {\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 20px;\n    text-align: center;\n    letter-spacing: 0.15px;\n    color: #333333;\n  }\n`;\n\nexport const ButtonSecondary = styled(Button)`\n  color: rgba(33, 65, 158, 1);\n`;\n\nexport const ButtonPrimary = styled(Button)`\n  background: #8dc544;\n  color: white;\n\n  &:hover {\n    color: #8dc544;\n  }\n`;\n\nexport const StyledSuccesForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: Roboto;\n  font-style: normal;\n  padding: 50px;\n  align-items: center;\n\n  .image-email {\n    display: flex;\n    justify-content: center;\n\n    img {\n      width: 140px;\n      height: 140px;\n    }\n  }\n\n  h1 {\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 24px;\n    text-align: center;\n    letter-spacing: 0.15px;\n    color: #1a1a1a;\n  }\n\n  p {\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 24px;\n    text-align: center;\n    letter-spacing: 0.15px;\n    color: #333333;\n  }\n\n  .action-buttons {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 30px;\n\n    button {\n      margin: 10px;\n    }\n  }\n`;\n\nexport const StyledDetailsAtivo = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: Roboto;\n  font-style: normal;\n  align-items: center;\n  padding: 50px;\n\n  h1 {\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 24px;\n    text-align: center;\n    letter-spacing: 0.15px;\n    color: #1a1a1a;\n  }\n\n  p {\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 24px;\n    text-align: center;\n    letter-spacing: 0.15px;\n    color: #1a1a1a;\n  }\n\n  .action-buttons {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 30px;\n\n    button {\n      margin: 10px;\n    }\n  }\n\n  .content-group {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px 0;\n\n    .content-line {\n      display: flex;\n\n      span {\n        font-weight: bold;\n        font-size: 16px;\n        color: #1a1a1a;\n        margin-right: 10px;\n      }\n\n      p {\n        font-size: 16px;\n        line-height: 24px;\n        text-align: justify;\n        letter-spacing: 0.15px;\n        color: #1a1a1a;\n        margin: 0;\n      }\n    }\n  }\n`;\n\nexport const CreateQRForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: Roboto;\n  font-style: normal;\n  padding: 20px;\n\n  div {\n    margin: 10px 0;\n  }\n\n  .container-imageqr {\n    display: flex;\n    justify-content: center;\n    a {\n      margin: 30px 0;\n      width: 200px;\n      text-align: center;\n      img {\n        width: 200px;\n      }\n    }\n  }\n`;\n\nexport const StyledPMForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: Roboto;\n  font-style: normal;\n  padding: 20px;\n  align-items: center;\n\n  .action-buttons {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 30px;\n\n    button {\n      margin: 10px;\n    }\n  }\n`;\n\nexport const StyledForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: Roboto;\n  font-style: normal;\n  width: 100%;\n\n  h1 {\n    font-weight: bold;\n    font-size: 16px;\n    line-height: 24px;\n    text-align: center;\n    letter-spacing: 0.15px;\n    color: #1a1a1a;\n  }\n\n  div {\n    margin: 10px 0;\n  }\n\n  .MuiCheckbox-colorSecondary.Mui-checked {\n    color: #8dc544;\n\n    &:hover {\n      background-color: rgba(141, 197, 68, 0.04);\n    }\n  }\n\n  .MuiIconButton-colorSecondary:hover {\n    background-color: rgba(141, 197, 68, 0.04);\n  }\n`;","import React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport QRCode from \"qrcode\";\nimport { ButtonPrimary, CreateQRForm } from \"../styles\";\n\nconst initialState = {\n  ativo: \"Bomba Centrífuga Bipartida\",\n  ativo_description:\n    \"Bomba que permite a passagem de água pelos canos do sistema de abastecimento de água.\",\n  id_alpha: \"CMB-01/45543000\",\n  serial: \"13324567\",\n  fabricante: \"Aquamec\",\n  site: \"3224\",\n  posicao: \"Instalado no objeto CMB-45/678378900\",\n  status: \"Em Operação\",\n  tombamento: \"1862739898239012398\",\n  condicao: \"Operacional\",\n};\n\nfunction CreateQrCode() {\n  // States do app\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [form, setForm] = useState(initialState);\n\n  // codigo responsavel por gerar o QR code a partir do dado passado para o input\n  const generateQrCode = async () => {\n    try {\n      const response = await QRCode.toDataURL(JSON.stringify(form));\n      setImageUrl(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleForm = (data, name) => {\n    const { value } = data.target;\n    setForm({ ...form, [name]: value });\n  };\n\n  return (\n    <CreateQRForm>\n      <div className=\"container-imageqr\">\n        {imageUrl ? (\n          <a href={imageUrl} download>\n            <img src={imageUrl} alt=\"img\" />\n          </a>\n        ) : null}\n      </div>\n\n      <TextField\n        required\n        id=\"outlined-textarea\"\n        label=\"Ativo\"\n        name=\"ativo\"\n        value={form.ativo}\n        onChange={(e) => handleForm(e, \"ativo\")}\n        variant=\"outlined\"\n      />\n      <TextField\n        required\n        id=\"outlined-required\"\n        multiline\n        label=\"Descrição do Ativo\"\n        nome=\"ativo_description\"\n        value={form.ativo_description}\n        onChange={(e) => handleForm(e, \"ativo_description\")}\n        variant=\"outlined\"\n      />\n      <TextField\n        required\n        id=\"outlined-required\"\n        label=\"ID Alpha\"\n        nome=\"id_alpha\"\n        value={form.id_alpha}\n        onChange={(e) => handleForm(e, \"id_alpha\")}\n        variant=\"outlined\"\n      />\n      <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Serial\"\n        nome=\"serial\"\n        value={form.serial}\n        onChange={(e) => handleForm(e, \"serial\")}\n        variant=\"outlined\"\n      />\n      <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Fabricante\"\n        nome=\"fabricante\"\n        value={form.fabricante}\n        onChange={(e) => handleForm(e, \"fabricante\")}\n        variant=\"outlined\"\n      />\n      <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Site\"\n        nome=\"site\"\n        value={form.site}\n        onChange={(e) => handleForm(e, \"site\")}\n        variant=\"outlined\"\n      />\n      <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Posicao\"\n        nome=\"posicao\"\n        value={form.posicao}\n        onChange={(e) => handleForm(e, \"posicao\")}\n        variant=\"outlined\"\n      />\n      <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Status\"\n        nome=\"status\"\n        value={form.status}\n        onChange={(e) => handleForm(e, \"status\")}\n        variant=\"outlined\"\n      />\n      <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Tombamento\"\n        nome=\"tombamento\"\n        value={form.tombamento}\n        onChange={(e) => handleForm(e, \"tombamento\")}\n        variant=\"outlined\"\n      />\n      <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Condicao\"\n        nome=\"condicao\"\n        value={form.condicao}\n        onChange={(e) => handleForm(e, \"condicao\")}\n        variant=\"outlined\"\n      />\n\n      <ButtonPrimary onClick={() => generateQrCode()}>\n        Gerar QR CODE\n      </ButtonPrimary>\n    </CreateQRForm>\n  );\n}\n\nexport default CreateQrCode;\n","export const PREFIX_PATH = process.env.REACT_APP_PREFIX_PATH\n  ? process.env.REACT_APP_PREFIX_PATH\n  : \"\";\n","import TextField from \"@material-ui/core/TextField/TextField\";\nimport React from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PREFIX_PATH } from \"../helper/constants\";\nimport { ButtonPrimary, ButtonSecondary, StyledScanQr } from \"../styles\";\n\n//################################# APP ####################################\nfunction ReaderQrCode() {\n  const navigate = useNavigate();\n\n\n  // função responsavel por gerenciar os erros da leitura do QR CODE\n  const handleErrorWebCam = (error) => {\n    console.log(error);\n  };\n\n  // função executada quando há uma leitura do QR code pela camera do notebook\n  const handleScanWebCam = (result) => {\n    if (result) {\n      const parsed = JSON.parse(result);\n      navigate(`${PREFIX_PATH}/reader-qrcode/ativo-details`, { state: parsed });\n    }\n  };\n\n  const handleHome = () => {\n    navigate(`${PREFIX_PATH}/`);\n  };\n\n  return (\n    <StyledScanQr>\n      <h1>Aponte a câmera do celular em direção ao QR Code</h1>\n\n      <div className=\"scan-qr\">\n        <QrReader\n          delay={300}\n          style={{ width: \"100%\" }}\n          onError={handleErrorWebCam}\n          onScan={handleScanWebCam}\n        />\n      </div>\n\n      <p className=\"details\">\n        Certifique-se de que o QR Code esteja bem centralizado no quadrado verde\n      </p>\n\n      <div className=\"code-content\">\n        <TextField\n          id=\"outlined-helperText\"\n          label=\"ID Alpha\"\n          helperText=\"Código do Ativo\"\n          variant=\"outlined\"\n        />\n      </div>\n\n      <div className=\"action-buttons\">\n        <ButtonSecondary onClick={handleHome}>cancelar</ButtonSecondary>\n        <ButtonPrimary>Buscar Ativo</ButtonPrimary>\n      </div>\n    </StyledScanQr>\n  );\n}\n\nexport default ReaderQrCode;\n","import React from \"react\";\nimport {\n  FormLabel,\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\n\nfunction Electric({ form, setForm }) {\n  const [state, setState] = React.useState({\n    faltaEnergia: false,\n    chaveFusivel: false,\n    tensaoNormal: false,\n    cheiroQueimado: false,\n  });\n\n  const handleChange = (event) => {\n    const obj = { ...state, [event.target.name]: event.target.checked };\n\n    setState(obj);\n    setForm({ ...form, natureForm: obj });\n  };\n\n  const { faltaEnergia, chaveFusivel, tensaoNormal, cheiroQueimado } = state;\n\n  return (\n    <div>\n      <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\n        <FormLabel component=\"legend\">Selecione o que for Verdadeiro</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={faltaEnergia}\n                onChange={handleChange}\n                name=\"faltaEnergia\"\n              />\n            }\n            label=\"Há falta de energia na vizinhança\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={chaveFusivel}\n                onChange={handleChange}\n                name=\"chaveFusivel\"\n              />\n            }\n            label=\"Chave fusível (canela, banana) aberta\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={tensaoNormal}\n                onChange={handleChange}\n                name=\"tensaoNormal\"\n              />\n            }\n            label=\"Tensão da unidade normal\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={cheiroQueimado}\n                onChange={handleChange}\n                name=\"cheiroQueimado\"\n              />\n            }\n            label=\"Cheiro de queimado\"\n          />\n        </FormGroup>\n      </FormControl>\n    </div>\n  );\n}\n\nexport default Electric;\n","import React from \"react\";\nimport {\n  FormLabel,\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  FormHelperText,\n  Checkbox,\n} from \"@material-ui/core\";\n\nfunction Mechanical({ form, setForm }) {\n  const [state, setState] = React.useState({\n    nivelSuccao: false,\n    valvulaSuccao: false,\n    valvulaRecalque: false,\n    vibracaoAnormal: false,\n    bombaTravada: false,\n    barulhoAnormal: false,\n    gaxetaVazamento: false,\n  });\n\n  const handleChange = (event) => {\n    const obj = { ...state, [event.target.name]: event.target.checked };\n\n    setState(obj);\n    setForm({ ...form, natureForm: obj });\n  };\n\n  const {\n    nivelSuccao,\n    valvulaSuccao,\n    valvulaRecalque,\n    vibracaoAnormal,\n    bombaTravada,\n    barulhoAnormal,\n    gaxetaVazamento,\n  } = state;\n\n  return (\n    <div>\n      <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\n        <FormLabel component=\"legend\">Selecione o que for verdadeiro</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={nivelSuccao}\n                onChange={handleChange}\n                name=\"nivelSuccao\"\n              />\n            }\n            label=\"O nível de succção está normal\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={valvulaSuccao}\n                onChange={handleChange}\n                name=\"valvulaSuccao\"\n              />\n            }\n            label=\"A válvula de sucção está aberta\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={valvulaRecalque}\n                onChange={handleChange}\n                name=\"valvulaRecalque\"\n              />\n            }\n            label=\"A válvula de recalque está aberta\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={vibracaoAnormal}\n                onChange={handleChange}\n                name=\"vibracaoAnormal\"\n              />\n            }\n            label=\"A vibração está anormal\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={bombaTravada}\n                onChange={handleChange}\n                name=\"bombaTravada\"\n              />\n            }\n            label=\"A bomba está travada\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={barulhoAnormal}\n                onChange={handleChange}\n                name=\"barulhoAnormal\"\n              />\n            }\n            label=\"Há um barulho anormal\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={gaxetaVazamento}\n                onChange={handleChange}\n                name=\"gaxetaVazamento\"\n              />\n            }\n            label=\"A gaxeta está com vazamento\"\n          />\n        </FormGroup>\n        <FormHelperText>Selecione o que for verdadeiro</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n\nexport default Mechanical;\n","import React from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nfunction Unidentified({ form, setForm }) {\n  const [state, setState] = React.useState({\n    description: \"\",\n  });\n\n  const handleChange = (event) => {\n    const obj = { ...state, description: event.target.value };\n\n    setState(obj);\n    setForm({ ...form, natureForm: obj });\n  };\n\n  return (\n    <div>\n      <TextField\n        required\n        id=\"outlined-textarea\"\n        label=\"Descrição adicional\"\n        placeholder=\"Escreva aqui...\"\n        multiline\n        style={{ width: \"100%\" }}\n        value={state.description}\n        onChange={(e) => handleChange(e, \"description\")}\n        variant=\"outlined\"\n      />\n      <p>Caso sinta necessidade, entre em contato com o CCO:</p>\n      <Button\n        variant=\"contained\"\n        href=\"https://servicos.compesa.com.br\"\n        target=\"_blank\"\n      >\n        Entrar em contato com CCO\n      </Button>\n    </div>\n  );\n}\n\nexport default Unidentified;\n","import React from \"react\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport Electric from \"./Electric\";\nimport Mechanical from \"./Mechanical\";\nimport Unidentified from \"./Unidentified\";\nimport { StyledForm } from \"../styles\";\n\nfunction Form({ form, setForm }) {\n  const naturezas = [\n    {\n      value: 1,\n      label: \"Elétrico\",\n    },\n    {\n      value: 2,\n      label: \"Mecânico\",\n    },\n    {\n      value: 3,\n      label: \"Não identificada\",\n    },\n  ];\n\n  const handleChange = (event, attr) => {\n    setForm({ ...form, [attr]: event.target.value });\n  };\n\n  const handleNature = () => {\n    switch (form.nature) {\n      case 1:\n        return <Electric setForm={setForm} form={form} />;\n      case 2:\n        return <Mechanical setForm={setForm} form={form} />;\n      default:\n        return <Unidentified setForm={setForm} form={form} />;\n    }\n  };\n\n  return (\n    <StyledForm>\n      <TextField\n        required\n        id=\"outlined-textarea\"\n        label=\"ID Alpha\"\n        name=\"id_alpha\"\n        value={form.id_alpha}\n        variant=\"outlined\"\n        disabled\n      />\n      <h1>Preencha os dados para solicitar o PM:</h1>\n\n      <TextField\n        required\n        id=\"outlined-textarea\"\n        label=\"Unidade Operacional\"\n        value={form.unidadeOperacional}\n        onChange={(e) => handleChange(e, \"unidadeOperacional\")}\n        variant=\"outlined\"\n      />\n      <TextField\n        required\n        id=\"outlined-textarea\"\n        label=\"Descrição do problema\"\n        multiline\n        maxRows={4}\n        value={form.problemDescription}\n        onChange={(e) => handleChange(e, \"problemDescription\")}\n        variant=\"outlined\"\n      />\n\n      <TextField\n        id=\"outlined-select-natureza\"\n        select\n        label=\"Natureza do problema\"\n        value={form.nature}\n        onChange={(e) => handleChange(e, \"nature\")}\n        helperText=\"Selecione a natureza do problema\"\n        variant=\"outlined\"\n      >\n        {naturezas.map((tipo) => (\n          <MenuItem key={tipo.value} value={tipo.value}>\n            {tipo.label}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      {form.nature && handleNature()}\n    </StyledForm>\n  );\n}\n\nexport default Form;\n","import React, { useState, useEffect } from \"react\";\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, set, ref, child, push } from \"firebase/database\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Form from \"./Form\";\nimport { ButtonPrimary, ButtonSecondary, StyledPMForm } from \"../styles\";\nimport { PREFIX_PATH } from \"../helper/constants\";\n\n//################################# START Firebase Settings ####################################\n\nconst firebaseConfig = {\n  apiKey:\n    \"AAAAplipsUI:APA91bGQbCDPCuHA-XQRVNJRvYysIqzPqJ4JXk4d9iowYwHgCel81VZCQYqgdqEQaVX2qGWmwyLjGrnkpKtAs56LhlFZaCdRHZMpn9XVLcxtEc7c5GeiD-uMuibIkDFAQVpfV7mtFduP\",\n  authDomain: \"summerjob-9c9bf.firebaseapp.com\",\n  databaseURL: \"https://summerjob-9c9bf-default-rtdb.firebaseio.com/\",\n};\nconst app = initializeApp(firebaseConfig);\n\n// Get a reference to the database service\nconst database = getDatabase(app);\n\n//################################# END Firebase Settings ####################################\n\nconst initialState = {\n  ativo: \"\",\n  ativo_description: \"\",\n  id_alpha: \"\",\n  serial: \"\",\n  fabricante: \"\",\n  site: \"\",\n  posicao: \"\",\n  status: \"\",\n  tombamento: \"\",\n  condicao: \"\",\n  problemDescription: \"\",\n  unidadeOperacional: \"\",\n  operatorName: \"Jose Santiago Pereira\",\n  operatorPhone: \"(81) 988657433\",\n  nature: null,\n  natureForm: null,\n};\n\n//################################# APP ####################################\nfunction PmForm() {\n  const [form, setForm] = useState(initialState);\n  const { state } = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setForm(state);\n  }, [state]);\n\n  const submitOrder = () => {\n    // documentação para tempo real do firebase https://firebase.google.com/docs/database/web/start?authuser=0\n    const newPostKey = push(child(ref(database), \"ativos\")).key;\n\n    // const parsedData = JSON.parse(JSON.parse(scanResultWebCam));\n\n    set(ref(database, `ativos/${newPostKey}`), form);\n    navigate(`${PREFIX_PATH}/success`);\n  };\n\n  const handleHome = () => {\n    navigate(`${PREFIX_PATH}/`);\n  };\n\n  return (\n    <StyledPMForm>\n      <Form form={form} setForm={setForm} />\n      <div className=\"action-buttons\">\n        <ButtonSecondary onClick={handleHome}>cancelar</ButtonSecondary>\n        <ButtonPrimary onClick={submitOrder}>Enviar PM</ButtonPrimary>\n      </div>\n      {/* END Parte do codigo HTML responsavel por Ler o QR CODE */}\n    </StyledPMForm>\n  );\n}\n\nexport default PmForm;\n","import React from \"react\";\nimport { ButtonPrimary, ButtonSecondary, StyledSuccesForm } from \"../styles\";\nimport { PREFIX_PATH } from \"../helper/constants\";\nimport { useNavigate } from \"react-router-dom\";\n\n//################################# APP ####################################\nfunction SuccesForm() {\n  const navigate = useNavigate();\n  const srcImage = `${PREFIX_PATH}/assets/email.png`;\n\n  const handleHome = () => {\n    navigate(`${PREFIX_PATH}/`);\n  };\n\n  const scanQr = () => {\n    navigate(`${PREFIX_PATH}/reader-qrcode`);\n  }\n\n  return (\n    <StyledSuccesForm>\n      <div className=\"image-email\">\n        <img src={srcImage} alt=\"email\" />\n      </div>\n\n      <h1>O Pedido de Manutenção foi enviado e recebido pelo CCO</h1>\n\n      <p>\n        Em breve o PM será registrado e entrará em análise para a realização da\n        manutenção\n      </p>\n\n      <div className=\"action-buttons\">\n        <ButtonSecondary onClick={handleHome}>Voltar</ButtonSecondary>\n        <ButtonPrimary onClick={scanQr}>Ler Novo QR COde</ButtonPrimary>\n      </div>\n    </StyledSuccesForm>\n  );\n}\n\nexport default SuccesForm;\n","import { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\nimport * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function BasicMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const navigate = useNavigate();\n\n  const PREFIX_PATH = process.env.REACT_APP_PREFIX_PATH\n    ? process.env.REACT_APP_PREFIX_PATH\n    : \"\";\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleRoute = (route) => {\n    navigate(`${PREFIX_PATH}${route}`);\n    handleClose();\n  };\n\n  return (\n    <>\n      <IconButton\n        className=\"button-icon\"\n        id=\"basic-button\"\n        aria-controls={open ? \"basic-menu\" : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n      >\n        <MenuIcon></MenuIcon>\n      </IconButton>\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        clas\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n      >\n        <MenuItem onClick={() => handleRoute(\"/reader-qrcode\")}>\n          Escanear QR Code\n        </MenuItem>\n        <MenuItem onClick={() => handleRoute(\"/create-qrcode\")}>\n          Criar QR Code\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { PREFIX_PATH } from \"../helper/constants\";\nimport { StyledHeader } from \"../styles\";\nimport BasicMenu from \"./MenuHeader\";\n\nfunction Header() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [title, setTitle] = useState(\"Instruções de Uso\");\n\n  const deltaPng = `${PREFIX_PATH}/LogoDelta.png`;\n\n  useEffect(() => {\n    switch (location.pathname) {\n      case \"/\":\n        setTitle(\"Instruções de Uso\");\n        break;\n      case \"/reader-qrcode\":\n        setTitle(\"Leitor de QR Code\");\n        break;\n      case \"/create-qrcode\":\n        setTitle(\"Geração do QR Code\");\n        break;\n      case \"/reader-qrcode/ativo-details\":\n        setTitle(\"Informações do Ativo\");\n        break;\n      case \"/success\":\n        setTitle(\"Envio para CCO\");\n        break;\n      default:\n        setTitle(\"Pedido de Manutenção\");\n    }\n  }, [location]);\n\n  const handleHome = () => {\n    navigate(`${PREFIX_PATH}/`);\n  };\n\n  return (\n    <StyledHeader>\n      <div className=\"content\">\n        <div className=\"content-left\">\n          <div className=\"image-container\" onClick={handleHome}>\n            <img src={deltaPng} alt=\"logo\" />\n          </div>\n          <h1>{title} </h1>\n        </div>\n        <BasicMenu></BasicMenu>\n      </div>\n    </StyledHeader>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PREFIX_PATH } from \"../helper/constants\";\nimport { ButtonPrimary, StyledManual } from \"../styles\";\n\nfunction UseManual() {\n  const navigate = useNavigate();\n  const srcImage = `${PREFIX_PATH}/assets/qrcode.png`;\n\n  const handleButton = () => {\n    navigate(`${PREFIX_PATH}/reader-qrcode`);\n  };\n\n  return (\n    <StyledManual>\n      <h1>Seja bem-vindo(a) ao Delta!</h1>\n\n      <p>\n        O Sistema Delta permite a fácil identificação de ativos através de QR\n        Code, além do prático preenchimento e envio de Pedidos de Manutenção\n        (PM) para o Centro de Controle e Operação (CCO).\n      </p>\n\n      <div className=\"image-qr\">\n        <img src={srcImage} alt=\"qrCode\" />\n      </div>\n\n      <div className=\"instructions\">\n        <h1>Siga as intruções:</h1>\n\n        <div>\n          <span>1.</span>\n          <p>\n            Aponte a câmera do celular para o QR Code para que ocorra a leitura\n            da imagem\n          </p>\n        </div>\n        <div>\n          <span>2.</span>\n          <p>Após a leitura, receba os dados e informações sobre o ativo</p>\n        </div>\n        <div>\n          <span>3.</span>\n          <p>\n            Preencha o formulário do PM com todas as informações necessárias\n            Envie o PM para o CCO\n          </p>\n        </div>\n      </div>\n\n      <div className=\"action-button\">\n        <ButtonPrimary onClick={handleButton}>Ler QR Code</ButtonPrimary>\n      </div>\n    </StyledManual>\n  );\n}\n\nexport default UseManual;\n","import React from \"react\";\nimport { ButtonPrimary, StyledDetailsAtivo } from \"../styles\";\nimport { PREFIX_PATH } from \"../helper/constants\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nconst ContentLine = ({ label, content }) => {\n  return (\n    <div className=\"content-line\">\n      <span>{label}:</span>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nfunction AtivoDetails() {\n  const { state } = useLocation();\n  const navigate = useNavigate();\n\n  const generatePm = () => {\n    navigate(`${PREFIX_PATH}/reader-qrcode/form`, { state });\n  };\n\n  return (\n    <StyledDetailsAtivo>\n      <h1>{state.ativo}</h1>\n\n      <p>{state.ativo_description}</p>\n\n      <div className=\"content-group\">\n        <ContentLine label=\"Id Alpha\" content={state.id_alpha}></ContentLine>\n        <ContentLine label=\"N Serial\" content={state.serial}></ContentLine>\n        <ContentLine\n          label=\"Fabricante\"\n          content={state.fabricante}\n        ></ContentLine>\n      </div>\n\n      <div className=\"content-group\">\n        <ContentLine label=\"Site\" content={state.site}></ContentLine>\n        <ContentLine label=\"Posição\" content={state.posicao}></ContentLine>\n        <ContentLine\n          label=\"Tombamento\"\n          content={state.tombamento}\n        ></ContentLine>\n      </div>\n\n      <div className=\"content-group\">\n        <ContentLine label=\"Status\" content={state.status}></ContentLine>\n        <ContentLine label=\"Condição\" content={state.condicao}></ContentLine>\n      </div>\n\n      <ButtonPrimary onClick={generatePm}>GERAR PM</ButtonPrimary>\n    </StyledDetailsAtivo>\n  );\n}\n\nexport default AtivoDetails;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { Container } from \"@material-ui/core\";\nimport CreateQrCode from \"./components/CreateQrcode\";\nimport ReaderQrCode from \"./components/ReaderQrCode\";\nimport PmForm from \"./components/PmForm\";\nimport SuccesForm from \"./components/SuccesForm\";\nimport Header from \"./components/Header\";\nimport UseManual from \"./components/UseManual\";\nimport { PREFIX_PATH } from \"./helper/constants\";\nimport AtivoDetails from \"./components/AtivoDetails\";\n\n//################################# APP ####################################\nfunction App() {\n  return (\n    <Container style={{ padding: 0 }}>\n      <Router>\n        <Header />\n\n        <Routes>\n          <Route exact path={`${PREFIX_PATH}/`} element={<UseManual />} />\n          <Route\n            exact\n            path={`${PREFIX_PATH}/create-qrcode`}\n            element={<CreateQrCode />}\n          />\n          <Route\n            exact\n            path={`${PREFIX_PATH}/reader-qrcode`}\n            element={<ReaderQrCode />}\n          />\n          <Route\n            exact\n            path={`${PREFIX_PATH}/reader-qrcode/ativo-details`}\n            element={<AtivoDetails />}\n          />\n          <Route\n            exact\n            path={`${PREFIX_PATH}/reader-qrcode/form`}\n            element={<PmForm />}\n          />\n          <Route\n            exact\n            path={`${PREFIX_PATH}/success`}\n            element={<SuccesForm />}\n          />\n        </Routes>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}