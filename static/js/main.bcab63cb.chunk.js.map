{"version":3,"sources":["components/CreateQrcode.js","components/ReaderQrCode.js","components/Electric.js","components/Mechanical.js","components/Unidentified.js","components/Form.js","components/PmForm.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","conatiner","marginTop","title","display","justifyContent","alignItems","background","color","padding","btn","marginBottom","CreateQrCode","useState","text","setText","imageUrl","setImageUrl","classes","generateQrCode","a","QRCode","toDataURL","response","console","log","Card","className","CardContent","TextField","label","onChange","e","target","value","Button","variant","onClick","href","download","src","alt","ReaderQrCode","navigate","useNavigate","delay","style","width","onError","error","onScan","result","parsed","JSON","parse","state","Electric","form","setForm","React","faltaEnergia","chaveFusivel","tensaoNormal","cheiroQueimado","setState","handleChange","event","obj","name","checked","natureForm","Box","sx","FormControl","m","component","FormLabel","FormGroup","FormControlLabel","control","Checkbox","FormHelperText","Mechanical","nivelSuccao","valvulaSuccao","valvulaRecalque","vibracaoAnormal","bombaTravada","barulhoAnormal","gaxetaVazamento","Unidentified","description","id","placeholder","multiline","Form","attr","noValidate","autoComplete","required","ativo","disabled","setor","tombamento","unidade","problemDescription","operatorName","operatorPhone","select","nature","helperText","map","tipo","MenuItem","handleNature","app","initializeApp","apiKey","authDomain","databaseURL","database","getDatabase","initialState","PmForm","useLocation","useEffect","newPostKey","push","child","ref","key","set","container","App","Container","to","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcab63cb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  makeStyles,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport QRCode from \"qrcode\";\n\nfunction CreateQrCode() {\n  // States do app\n  const [text, setText] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  const classes = useStyles();\n\n  // codigo responsavel por gerar o QR code a partir do dado passado para o input\n  const generateQrCode = async () => {\n    try {\n      const response = await QRCode.toDataURL(text);\n      setImageUrl(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Card>\n      <h2 className={classes.title}>Generate QR Code</h2>\n      <CardContent>\n        <TextField\n          label=\"Enter Text Here\"\n          onChange={(e) => setText(e.target.value)}\n        />\n        <Button\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => generateQrCode()}\n        >\n          Generate\n        </Button>\n        <br />\n        <br />\n        <br />\n        {imageUrl ? (\n          <a href={imageUrl} download>\n            <img src={imageUrl} alt=\"img\" />\n          </a>\n        ) : null}\n      </CardContent>\n    </Card>\n  );\n}\n\n// Criação de um estilo customizado\nconst useStyles = makeStyles((theme) => ({\n  conatiner: {\n    marginTop: 10,\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"#3f51b5\",\n    color: \"#fff\",\n    padding: 20,\n  },\n  btn: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n}));\nexport default CreateQrCode;\n","import React from \"react\";\nimport { Card, CardContent, makeStyles } from \"@material-ui/core\";\nimport QrReader from \"react-qr-reader\";\nimport { useNavigate } from \"react-router-dom\";\n\n//################################# APP ####################################\nfunction ReaderQrCode() {\n  const navigate = useNavigate();\n  // carregando estilo customizado\n  const classes = useStyles();\n\n  // função responsavel por gerenciar os erros da leitura do QR CODE\n  const handleErrorWebCam = (error) => {\n    console.log(error);\n  };\n\n  // função executada quando há uma leitura do QR code pela camera do notebook\n  const handleScanWebCam = (result) => {\n    console.log(result);\n    if (result) {\n      const parsed = JSON.parse(JSON.parse(result));\n      navigate(\"/reader-qrcode/form\", { state: parsed });\n    }\n  };\n\n  return (\n    <Card>\n      <h2 className={classes.title}>Scan QR Code</h2>\n      <CardContent>\n        <h3>Qr Code Scan by Web Cam</h3>\n        <QrReader\n          delay={300}\n          style={{ width: \"50%\" }}\n          onError={handleErrorWebCam}\n          onScan={handleScanWebCam}\n        />\n      </CardContent>\n    </Card>\n  );\n}\n\n// Criação de um estilo customizado\nconst useStyles = makeStyles((theme) => ({\n  conatiner: {\n    marginTop: 10,\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"#3f51b5\",\n    color: \"#fff\",\n    padding: 20,\n  },\n  btn: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n}));\nexport default ReaderQrCode;\n","import React from \"react\";\nimport {\n  Box,\n  FormLabel,\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  FormHelperText,\n  Checkbox,\n} from \"@material-ui/core\";\n\nfunction Electric({ form, setForm }) {\n  const [state, setState] = React.useState({\n    faltaEnergia: false,\n    chaveFusivel: false,\n    tensaoNormal: false,\n    cheiroQueimado: false,\n  });\n\n  const handleChange = (event) => {\n    const obj = { ...state, [event.target.name]: event.target.checked };\n\n    setState(obj);\n    setForm({ ...form, natureForm: obj });\n  };\n\n  const { faltaEnergia, chaveFusivel, tensaoNormal, cheiroQueimado } = state;\n\n  return (\n    <div>\n      <Box sx={{ display: \"flex\" }}>\n        <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\n          <FormLabel component=\"legend\">Marque as caixas</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={faltaEnergia}\n                  onChange={handleChange}\n                  name=\"faltaEnergia\"\n                />\n              }\n              label=\"Há falta de energia na vizinhança?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={chaveFusivel}\n                  onChange={handleChange}\n                  name=\"chaveFusivel\"\n                />\n              }\n              label=\"Chave fusível (canela, banana) aberta?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={tensaoNormal}\n                  onChange={handleChange}\n                  name=\"tensaoNormal\"\n                />\n              }\n              label=\"Tensão da unidade normal?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={cheiroQueimado}\n                  onChange={handleChange}\n                  name=\"cheiroQueimado\"\n                />\n              }\n              label=\"Cheiro de queimado?\"\n            />\n          </FormGroup>\n          <FormHelperText>\n            Marque as caixas de acordo com os problemas identificados\n          </FormHelperText>\n        </FormControl>\n      </Box>\n    </div>\n  );\n}\n\nexport default Electric;\n","import React from \"react\";\nimport {\n  Box,\n  FormLabel,\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  FormHelperText,\n  Checkbox,\n} from \"@material-ui/core\";\n\nfunction Mechanical({ form, setForm }) {\n  const [state, setState] = React.useState({\n    nivelSuccao: false,\n    valvulaSuccao: false,\n    valvulaRecalque: false,\n    vibracaoAnormal: false,\n    bombaTravada: false,\n    barulhoAnormal: false,\n    gaxetaVazamento: false,\n  });\n\n  const handleChange = (event) => {\n    const obj = { ...state, [event.target.name]: event.target.checked };\n\n    setState(obj);\n    setForm({ ...form, natureForm: obj });\n  };\n\n  const {\n    nivelSuccao,\n    valvulaSuccao,\n    valvulaRecalque,\n    vibracaoAnormal,\n    bombaTravada,\n    barulhoAnormal,\n    gaxetaVazamento,\n  } = state;\n\n  return (\n    <div>\n      <Box sx={{ display: \"flex\" }}>\n        <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\n          <FormLabel component=\"legend\">Marque as caixas</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={nivelSuccao}\n                  onChange={handleChange}\n                  name=\"nivelSuccao\"\n                />\n              }\n              label=\"O nível de succção está normal?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={valvulaSuccao}\n                  onChange={handleChange}\n                  name=\"valvulaSuccao\"\n                />\n              }\n              label=\"A válvula de sucção está aberta?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={valvulaRecalque}\n                  onChange={handleChange}\n                  name=\"valvulaRecalque\"\n                />\n              }\n              label=\"A válvula de recalque está aberta?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={vibracaoAnormal}\n                  onChange={handleChange}\n                  name=\"vibracaoAnormal\"\n                />\n              }\n              label=\"A vibração está anormal?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={bombaTravada}\n                  onChange={handleChange}\n                  name=\"bombaTravada\"\n                />\n              }\n              label=\"A bomba está travada?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={barulhoAnormal}\n                  onChange={handleChange}\n                  name=\"barulhoAnormal\"\n                />\n              }\n              label=\"Há um barulho anormal?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={gaxetaVazamento}\n                  onChange={handleChange}\n                  name=\"gaxetaVazamento\"\n                />\n              }\n              label=\"A gaxeta está com vazamento?\"\n            />\n          </FormGroup>\n          <FormHelperText>\n            Marque as caixas de acordo com os problemas identificados\n          </FormHelperText>\n        </FormControl>\n      </Box>\n    </div>\n  );\n}\n\nexport default Mechanical;\n","import React from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nfunction Unidentified({ form, setForm }) {\n  const [state, setState] = React.useState({\n    description: \"\",\n  });\n\n  const handleChange = (event) => {\n    const obj = { ...state, [event.target.name]: event.target.checked };\n\n    setState(obj);\n    setForm({ ...form, natureForm: obj });\n  };\n\n  return (\n    <div>\n      <TextField\n        id=\"outlined-textarea\"\n        label=\"Descrição adicional\"\n        placeholder=\"Escreva aqui...\"\n        multiline\n        value={state.description}\n        onChange={handleChange}\n      />\n      <p>Caso sinta necessidade, entre em contato com o CCO:</p>\n      <Button\n        variant=\"contained\"\n        href=\"https://servicos.compesa.com.br\"\n        target=\"_blank\"\n      >\n        Entrar em contato com CCO\n      </Button>\n    </div>\n  );\n}\n\nexport default Unidentified;\n","import React from \"react\";\nimport { TextField, Box, MenuItem } from \"@material-ui/core\";\nimport Electric from \"./Electric\";\nimport Mechanical from \"./Mechanical\";\nimport Unidentified from \"./Unidentified\";\n\nfunction Form({ form, setForm }) {\n  const naturezas = [\n    {\n      value: 1,\n      label: \"Elétrico\",\n    },\n    {\n      value: 2,\n      label: \"Mecânico\",\n    },\n    {\n      value: 3,\n      label: \"Não identificada\",\n    },\n  ];\n\n  const handleChange = (event, attr) => {\n    setForm({ ...form, [attr]: event.target.value });\n  };\n\n  const handleNature = () => {\n    switch (form.nature) {\n      case 1:\n        return <Electric setForm={setForm} form={form} />;\n      case 2:\n        return <Mechanical setForm={setForm} form={form} />;\n      default:\n        return <Unidentified setForm={setForm} form={form} />;\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <div>\n        <TextField\n          required\n          id=\"ativo\"\n          label=\"Serial do ativo\"\n          placeholder=\"Insira aqui...\"\n          value={form.ativo}\n          disabled\n        />\n        <TextField\n          required\n          id=\"setor\"\n          label=\"Setor do ativo\"\n          placeholder=\"Insira aqui...\"\n          value={form.setor}\n          disabled\n        />\n        <TextField\n          required\n          id=\"tombamento\"\n          label=\"Serial do tombamento\"\n          placeholder=\"Insira aqui...\"\n          value={form.tombamento}\n          disabled\n        />\n        <TextField\n          required\n          id=\"unidade\"\n          label=\"Serial da unidade\"\n          placeholder=\"Insira aqui...\"\n          value={form.unidade}\n          disabled\n        />\n        <TextField\n          required\n          id=\"outlined-textarea\"\n          label=\"Descrição do problema\"\n          placeholder=\"Escreva aqui...\"\n          multiline\n          value={form.problemDescription}\n          onChange={(e) => handleChange(e, \"problemDescription\")}\n        />\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Seu nome\"\n          placeholder=\"Insira seu nome...\"\n          value={form.operatorName}\n          onChange={(e) => handleChange(e, \"operatorName\")}\n        />\n        <TextField\n          required\n          id=\"outlined-password-input\"\n          label=\"Escreva seu telefone\"\n          value={form.operatorPhone}\n          onChange={(e) => handleChange(e, \"operatorPhone\")}\n        />\n        <TextField\n          id=\"outlined-select-natureza\"\n          select\n          label=\"Natureza do problema\"\n          value={form.nature}\n          onChange={(e) => handleChange(e, \"nature\")}\n          helperText=\"Selecione a natureza do problema\"\n        >\n          {naturezas.map((tipo) => (\n            <MenuItem key={tipo.value} value={tipo.value}>\n              {tipo.label}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        {form.nature && handleNature()}\n      </div>\n    </Box>\n  );\n}\n\nexport default Form;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, makeStyles, Button } from \"@material-ui/core\";\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, set, ref, child, push } from \"firebase/database\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Form from \"./Form\";\n\n//################################# START Firebase Settings ####################################\n//quando depois eu explico para vocês como configura o firebase, por hora podem usar o meu\nconst firebaseConfig = {\n  apiKey:\n    \"AAAAplipsUI:APA91bGQbCDPCuHA-XQRVNJRvYysIqzPqJ4JXk4d9iowYwHgCel81VZCQYqgdqEQaVX2qGWmwyLjGrnkpKtAs56LhlFZaCdRHZMpn9XVLcxtEc7c5GeiD-uMuibIkDFAQVpfV7mtFduP\",\n  authDomain: \"summerjob-9c9bf.firebaseapp.com\",\n  databaseURL: \"https://summerjob-9c9bf-default-rtdb.firebaseio.com/\",\n};\nconst app = initializeApp(firebaseConfig);\n\n// Get a reference to the database service\nconst database = getDatabase(app);\n//################################# END Firebase Settings ####################################\n\nconst initialState = {\n  ativo: \"\",\n  tombamento: \"\",\n  unidade: \"\",\n  setor: \"\",\n  problemDescription: \"\",\n  operatorName: \"\",\n  operatorPhone: \"\",\n  nature: null,\n  natureForm: null,\n};\n\n//################################# APP ####################################\nfunction PmForm() {\n  const [form, setForm] = useState(initialState);\n  const navigate = useNavigate();\n  const { state } = useLocation();\n\n  useEffect(() => {\n    setForm(state);\n  }, [state]);\n\n  // carregando estilo customizado\n  const classes = useStyles();\n\n  const submitOrder = () => {\n    console.log(form);\n\n    // documentação para tempo real do firebase https://firebase.google.com/docs/database/web/start?authuser=0\n    const newPostKey = push(child(ref(database), \"ativos\")).key;\n\n    // const parsedData = JSON.parse(JSON.parse(scanResultWebCam));\n\n    set(ref(database, `ativos/${newPostKey}`), form);\n\n    navigate(\"/reader-qrcode\");\n  };\n\n  return (\n    <Card>\n      <h2 className={classes.title}>PM Form</h2>\n      <CardContent>\n        {/* Parte do codigo HTML responsavel por gerar o QR CODE */}\n\n        {/* Parte do codigo HTML responsavel por Ler o QR CODE */}\n        <h3>PM Form</h3>\n\n        <Form form={form} setForm={setForm} />\n        <Button\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={submitOrder}\n        >\n          Submit PM\n        </Button>\n        {/* END Parte do codigo HTML responsavel por Ler o QR CODE */}\n      </CardContent>\n    </Card>\n  );\n}\n\n// Criação de um estilo customizado\nconst useStyles = makeStyles((theme) => ({\n  conatiner: {\n    marginTop: 10,\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"#3f51b5\",\n    color: \"#fff\",\n    padding: 20,\n  },\n  btn: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n}));\nexport default PmForm;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { Container, makeStyles } from \"@material-ui/core\";\nimport CreateQrCode from \"./components/CreateQrcode\";\nimport ReaderQrCode from \"./components/ReaderQrCode\";\nimport PmForm from \"./components/PmForm\";\n\n//################################# APP ####################################\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.conatiner}>\n      <Router>\n        <Link to=\"/create-qrcode\">Criar um QR Code</Link>\n        <Link to=\"/reader-qrcode\">Leitor de QrCode</Link>\n\n        <Routes>\n          <Route exact path=\"/create-qrcode\" element={<CreateQrCode />} />\n          <Route exact path=\"/reader-qrcode\" element={<ReaderQrCode />} />\n          <Route exact path=\"/reader-qrcode/form\" element={<PmForm />} />\n        </Routes>\n      </Router>\n    </Container>\n  );\n}\n\n// Criação de um estilo customizado\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: 10,\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"#3f51b5\",\n    color: \"#fff\",\n    padding: 20,\n  },\n  btn: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n}));\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}