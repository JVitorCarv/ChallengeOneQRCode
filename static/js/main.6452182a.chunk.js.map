{"version":3,"sources":["components/CreateQrcode.js","helper/constants.js","styles.js","components/ReaderQrCode.js","components/Electric.js","components/Mechanical.js","components/Unidentified.js","components/Form.js","components/PmForm.js","components/SuccesForm.js","components/MenuHeader.js","components/Header.js","components/UseManual.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","conatiner","marginTop","title","display","justifyContent","alignItems","background","color","padding","btn","marginBottom","CreateQrCode","useState","text","setText","imageUrl","setImageUrl","classes","generateQrCode","a","QRCode","toDataURL","response","console","log","Card","CardContent","TextField","label","onChange","e","target","value","Button","className","variant","onClick","href","download","src","alt","PREFIX_PATH","process","StyledHeader","styled","header","StyledManual","div","StyledScanQr","ButtonSecondary","ButtonPrimary","ReaderQrCode","navigate","useNavigate","delay","style","width","onError","error","onScan","result","parsed","JSON","parse","state","id","helperText","Electric","form","setForm","React","faltaEnergia","chaveFusivel","tensaoNormal","cheiroQueimado","setState","handleChange","event","obj","name","checked","natureForm","Box","sx","FormControl","m","component","FormLabel","FormGroup","FormControlLabel","control","Checkbox","FormHelperText","Mechanical","nivelSuccao","valvulaSuccao","valvulaRecalque","vibracaoAnormal","bombaTravada","barulhoAnormal","gaxetaVazamento","Unidentified","description","required","placeholder","multiline","Form","attr","noValidate","autoComplete","ativo","disabled","setor","tombamento","unidade","problemDescription","operatorName","operatorPhone","select","nature","map","tipo","MenuItem","handleNature","app","initializeApp","apiKey","authDomain","databaseURL","database","getDatabase","initialState","PmForm","useLocation","useEffect","newPostKey","push","child","ref","key","set","container","App","Container","BasicMenu","anchorEl","setAnchorEl","open","Boolean","handleClose","handleRoute","route","IconButton","aria-controls","undefined","aria-haspopup","aria-expanded","currentTarget","Menu","onClose","clas","MenuListProps","Header","location","setTitle","deltaPng","pathname","UseManual","srcImage","exact","path","element","SuccesForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6452182a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  makeStyles,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport QRCode from \"qrcode\";\n\nfunction CreateQrCode() {\n  // States do app\n  const [text, setText] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  const classes = useStyles();\n\n  // codigo responsavel por gerar o QR code a partir do dado passado para o input\n  const generateQrCode = async () => {\n    try {\n      const response = await QRCode.toDataURL(text);\n      setImageUrl(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Card>\n      <CardContent>\n        <TextField\n          label=\"Enter Text Here\"\n          onChange={(e) => setText(e.target.value)}\n        />\n        <Button\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => generateQrCode()}\n        >\n          Generate\n        </Button>\n        <br />\n        <br />\n        <br />\n        {imageUrl ? (\n          <a href={imageUrl} download>\n            <img src={imageUrl} alt=\"img\" />\n          </a>\n        ) : null}\n      </CardContent>\n    </Card>\n  );\n}\n\n// Criação de um estilo customizado\nconst useStyles = makeStyles((theme) => ({\n  conatiner: {\n    marginTop: 10,\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"#3f51b5\",\n    color: \"#fff\",\n    padding: 20,\n  },\n  btn: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n}));\nexport default CreateQrCode;\n","export const PREFIX_PATH = process.env.REACT_APP_PREFIX_PATH\n  ? process.env.REACT_APP_PREFIX_PATH\n  : \"\";\n","import { Button } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nexport const StyledHeader = styled.header`\n  background: #21419e;\n  width: 100%;\n  height: 56px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  .content {\n    display: flex;\n    padding: 10px;\n    align-items: center;\n    width: 100%;\n    justify-content: space-between;\n\n    .content-left {\n      display: flex;\n    }\n\n    .image-container {\n      cursor: pointer;\n      width: 31px;\n      height: 31px;\n      img {\n        width: 31px;\n        height: 31px;\n      }\n    }\n\n    .button-icon {\n      margin-right: 10px;\n      color: white;\n    }\n\n    h1 {\n      color: #ffffff;\n      font-family: Roboto;\n      font-style: normal;\n      font-weight: 500;\n      font-size: 20px;\n      margin: 0 0 0 10px;\n    }\n  }\n`;\n\nexport const StyledManual = styled.div`\n  font-family: Roboto;\n  font-style: normal;\n  padding: 10px;\n\n  h1 {\n    font-weight: 500;\n    font-size: 20px;\n    color: #000000;\n  }\n\n  p {\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 24px;\n    text-align: justify;\n    letter-spacing: 0.15px;\n    color: #1a1a1a;\n  }\n\n  .image-qr {\n    display: flex;\n    justify-content: center;\n\n    img {\n      width: 200px;\n      height: 149px;\n    }\n  }\n\n  .action-button {\n    display: flex;\n    justify-content: center;\n    margin-top: 40px;\n  }\n\n  .instructions {\n    h1 {\n      font-weight: bold;\n      font-size: 16px;\n      line-height: 24px;\n      text-align: justify;\n      letter-spacing: 0.15px;\n      color: #1a1a1a;\n    }\n    div {\n      display: flex;\n\n      span {\n        font-weight: bold;\n        font-size: 16px;\n        color: #1a1a1a;\n        margin-right: 10px;\n      }\n\n      p {\n        font-size: 16px;\n        line-height: 24px;\n        text-align: justify;\n        letter-spacing: 0.15px;\n        color: #1a1a1a;\n        margin: 0;\n      }\n    }\n  }\n`;\n\nexport const StyledScanQr = styled.div`\n  display: flex;\n  justify-content: center;\n  font-family: Roboto;\n  font-style: normal;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n\n  h1 {\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 24px;\n    text-align: center;\n    letter-spacing: 0.15px;\n    color: #1a1a1a;\n  }\n\n  section {\n    > div {\n      box-shadow: rgba(141, 197, 68, 1) 0px 0px 0px 5px inset !important;\n      width: 120% !important;\n      height: 120% !important;\n      left: -20px !important;\n      top: -20px !important;\n    }\n  }\n\n  .action-buttons {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 30px;\n\n    button {\n      margin: 10px;\n    }\n  }\n\n  .code-content {\n    margin-top: 20px;\n  }\n\n  .scan-qr {\n    display: flex;\n    justify-content: center;\n    width: 223px;\n    height: 223px;\n  }\n\n  .details {\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 20px;\n    text-align: center;\n    letter-spacing: 0.15px;\n    color: #333333;\n  }\n`;\n\nexport const ButtonSecondary = styled(Button)`\n  color: rgba(33, 65, 158, 1);\n`;\n\nexport const ButtonPrimary = styled(Button)`\n  background: #8dc544;\n  color: white;\n\n  &:hover {\n    color: #8dc544;\n  }\n`;\n","import TextField from \"@material-ui/core/TextField/TextField\";\nimport React from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PREFIX_PATH } from \"../helper/constants\";\nimport { ButtonPrimary, ButtonSecondary, StyledScanQr } from \"../styles\";\n\n//################################# APP ####################################\nfunction ReaderQrCode() {\n  const navigate = useNavigate();\n\n\n  // função responsavel por gerenciar os erros da leitura do QR CODE\n  const handleErrorWebCam = (error) => {\n    console.log(error);\n  };\n\n  // função executada quando há uma leitura do QR code pela camera do notebook\n  const handleScanWebCam = (result) => {\n    if (result) {\n      const parsed = JSON.parse(JSON.parse(result));\n      navigate(`${PREFIX_PATH}/reader-qrcode/form`, { state: parsed });\n    }\n  };\n\n  const handleHome = () => {\n    navigate(`${PREFIX_PATH}/`);\n  };\n\n  return (\n    <StyledScanQr>\n      <h1>Aponte a câmera do celular em direção ao QR Code</h1>\n\n      <div className=\"scan-qr\">\n        <QrReader\n          delay={300}\n          style={{ width: \"100%\" }}\n          onError={handleErrorWebCam}\n          onScan={handleScanWebCam}\n        />\n      </div>\n\n      <p className=\"details\">\n        Certifique-se que o QR Code esteja bem centralizado no quadrado verde\n      </p>\n\n      <div className=\"code-content\">\n        <TextField\n          id=\"outlined-helperText\"\n          label=\"ID Alpha\"\n          helperText=\"Código do Ativo\"\n          variant=\"outlined\"\n        />\n      </div>\n\n      <div className=\"action-buttons\">\n        <ButtonSecondary onClick={handleHome}>cancelar</ButtonSecondary>\n        <ButtonPrimary>Buscar Ativo</ButtonPrimary>\n      </div>\n    </StyledScanQr>\n  );\n}\n\nexport default ReaderQrCode;\n","import React from \"react\";\nimport {\n  Box,\n  FormLabel,\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  FormHelperText,\n  Checkbox,\n} from \"@material-ui/core\";\n\nfunction Electric({ form, setForm }) {\n  const [state, setState] = React.useState({\n    faltaEnergia: false,\n    chaveFusivel: false,\n    tensaoNormal: false,\n    cheiroQueimado: false,\n  });\n\n  const handleChange = (event) => {\n    const obj = { ...state, [event.target.name]: event.target.checked };\n\n    setState(obj);\n    setForm({ ...form, natureForm: obj });\n  };\n\n  const { faltaEnergia, chaveFusivel, tensaoNormal, cheiroQueimado } = state;\n\n  return (\n    <div>\n      <Box sx={{ display: \"flex\" }}>\n        <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\n          <FormLabel component=\"legend\">Marque as caixas</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={faltaEnergia}\n                  onChange={handleChange}\n                  name=\"faltaEnergia\"\n                />\n              }\n              label=\"Há falta de energia na vizinhança?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={chaveFusivel}\n                  onChange={handleChange}\n                  name=\"chaveFusivel\"\n                />\n              }\n              label=\"Chave fusível (canela, banana) aberta?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={tensaoNormal}\n                  onChange={handleChange}\n                  name=\"tensaoNormal\"\n                />\n              }\n              label=\"Tensão da unidade normal?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={cheiroQueimado}\n                  onChange={handleChange}\n                  name=\"cheiroQueimado\"\n                />\n              }\n              label=\"Cheiro de queimado?\"\n            />\n          </FormGroup>\n          <FormHelperText>\n            Marque as caixas de acordo com os problemas identificados\n          </FormHelperText>\n        </FormControl>\n      </Box>\n    </div>\n  );\n}\n\nexport default Electric;\n","import React from \"react\";\nimport {\n  Box,\n  FormLabel,\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  FormHelperText,\n  Checkbox,\n} from \"@material-ui/core\";\n\nfunction Mechanical({ form, setForm }) {\n  const [state, setState] = React.useState({\n    nivelSuccao: false,\n    valvulaSuccao: false,\n    valvulaRecalque: false,\n    vibracaoAnormal: false,\n    bombaTravada: false,\n    barulhoAnormal: false,\n    gaxetaVazamento: false,\n  });\n\n  const handleChange = (event) => {\n    const obj = { ...state, [event.target.name]: event.target.checked };\n\n    setState(obj);\n    setForm({ ...form, natureForm: obj });\n  };\n\n  const {\n    nivelSuccao,\n    valvulaSuccao,\n    valvulaRecalque,\n    vibracaoAnormal,\n    bombaTravada,\n    barulhoAnormal,\n    gaxetaVazamento,\n  } = state;\n\n  return (\n    <div>\n      <Box sx={{ display: \"flex\" }}>\n        <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\n          <FormLabel component=\"legend\">Marque as caixas</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={nivelSuccao}\n                  onChange={handleChange}\n                  name=\"nivelSuccao\"\n                />\n              }\n              label=\"O nível de succção está normal?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={valvulaSuccao}\n                  onChange={handleChange}\n                  name=\"valvulaSuccao\"\n                />\n              }\n              label=\"A válvula de sucção está aberta?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={valvulaRecalque}\n                  onChange={handleChange}\n                  name=\"valvulaRecalque\"\n                />\n              }\n              label=\"A válvula de recalque está aberta?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={vibracaoAnormal}\n                  onChange={handleChange}\n                  name=\"vibracaoAnormal\"\n                />\n              }\n              label=\"A vibração está anormal?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={bombaTravada}\n                  onChange={handleChange}\n                  name=\"bombaTravada\"\n                />\n              }\n              label=\"A bomba está travada?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={barulhoAnormal}\n                  onChange={handleChange}\n                  name=\"barulhoAnormal\"\n                />\n              }\n              label=\"Há um barulho anormal?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={gaxetaVazamento}\n                  onChange={handleChange}\n                  name=\"gaxetaVazamento\"\n                />\n              }\n              label=\"A gaxeta está com vazamento?\"\n            />\n          </FormGroup>\n          <FormHelperText>\n            Marque as caixas de acordo com os problemas identificados\n          </FormHelperText>\n        </FormControl>\n      </Box>\n    </div>\n  );\n}\n\nexport default Mechanical;\n","import React from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nfunction Unidentified({ form, setForm }) {\n  const [state, setState] = React.useState({\n    description: \"\",\n  });\n\n  const handleChange = (event) => {\n    const obj = { ...state, description: event.target.value };\n\n    setState(obj);\n    setForm({ ...form, natureForm: obj });\n  };\n\n  return (\n    <div>\n      <TextField\n        required\n        id=\"outlined-textarea\"\n        label=\"Descrição adicional\"\n        placeholder=\"Escreva aqui...\"\n        multiline\n        value={state.description}\n        onChange={(e) => handleChange(e, \"description\")}\n      />\n      <p>Caso sinta necessidade, entre em contato com o CCO:</p>\n      <Button\n        variant=\"contained\"\n        href=\"https://servicos.compesa.com.br\"\n        target=\"_blank\"\n      >\n        Entrar em contato com CCO\n      </Button>\n    </div>\n  );\n}\n\nexport default Unidentified;\n","import React from \"react\";\nimport { TextField, Box, MenuItem } from \"@material-ui/core\";\nimport Electric from \"./Electric\";\nimport Mechanical from \"./Mechanical\";\nimport Unidentified from \"./Unidentified\";\n\nfunction Form({ form, setForm }) {\n  const naturezas = [\n    {\n      value: 1,\n      label: \"Elétrico\",\n    },\n    {\n      value: 2,\n      label: \"Mecânico\",\n    },\n    {\n      value: 3,\n      label: \"Não identificada\",\n    },\n  ];\n\n  const handleChange = (event, attr) => {\n    setForm({ ...form, [attr]: event.target.value });\n  };\n\n  const handleNature = () => {\n    switch (form.nature) {\n      case 1:\n        return <Electric setForm={setForm} form={form} />;\n      case 2:\n        return <Mechanical setForm={setForm} form={form} />;\n      default:\n        return <Unidentified setForm={setForm} form={form} />;\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <div>\n        <TextField\n          required\n          id=\"ativo\"\n          label=\"Serial do ativo\"\n          placeholder=\"Insira aqui...\"\n          value={form.ativo}\n          disabled\n        />\n        <TextField\n          required\n          id=\"setor\"\n          label=\"Setor do ativo\"\n          placeholder=\"Insira aqui...\"\n          value={form.setor}\n          disabled\n        />\n        <TextField\n          required\n          id=\"tombamento\"\n          label=\"Serial do tombamento\"\n          placeholder=\"Insira aqui...\"\n          value={form.tombamento}\n          disabled\n        />\n        <TextField\n          required\n          id=\"unidade\"\n          label=\"Serial da unidade\"\n          placeholder=\"Insira aqui...\"\n          value={form.unidade}\n          disabled\n        />\n        <TextField\n          required\n          id=\"outlined-textarea\"\n          label=\"Descrição do problema\"\n          placeholder=\"Escreva aqui...\"\n          multiline\n          value={form.problemDescription}\n          onChange={(e) => handleChange(e, \"problemDescription\")}\n        />\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Seu nome\"\n          placeholder=\"Insira seu nome...\"\n          value={form.operatorName}\n          onChange={(e) => handleChange(e, \"operatorName\")}\n        />\n        <TextField\n          required\n          id=\"outlined-password-input\"\n          label=\"Escreva seu telefone\"\n          value={form.operatorPhone}\n          onChange={(e) => handleChange(e, \"operatorPhone\")}\n        />\n        <TextField\n          id=\"outlined-select-natureza\"\n          select\n          label=\"Natureza do problema\"\n          value={form.nature}\n          onChange={(e) => handleChange(e, \"nature\")}\n          helperText=\"Selecione a natureza do problema\"\n        >\n          {naturezas.map((tipo) => (\n            <MenuItem key={tipo.value} value={tipo.value}>\n              {tipo.label}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        {form.nature && handleNature()}\n      </div>\n    </Box>\n  );\n}\n\nexport default Form;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, makeStyles, Button } from \"@material-ui/core\";\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, set, ref, child, push } from \"firebase/database\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Form from \"./Form\";\n\n//################################# START Firebase Settings ####################################\n//quando depois eu explico para vocês como configura o firebase, por hora podem usar o meu\nconst firebaseConfig = {\n  apiKey:\n    \"AAAAplipsUI:APA91bGQbCDPCuHA-XQRVNJRvYysIqzPqJ4JXk4d9iowYwHgCel81VZCQYqgdqEQaVX2qGWmwyLjGrnkpKtAs56LhlFZaCdRHZMpn9XVLcxtEc7c5GeiD-uMuibIkDFAQVpfV7mtFduP\",\n  authDomain: \"summerjob-9c9bf.firebaseapp.com\",\n  databaseURL: \"https://summerjob-9c9bf-default-rtdb.firebaseio.com/\",\n};\nconst app = initializeApp(firebaseConfig);\n\n// Get a reference to the database service\nconst database = getDatabase(app);\n//################################# END Firebase Settings ####################################\n\nconst initialState = {\n  ativo: \"\",\n  tombamento: \"\",\n  unidade: \"\",\n  setor: \"\",\n  problemDescription: \"\",\n  operatorName: \"\",\n  operatorPhone: \"\",\n  nature: null,\n  natureForm: null,\n};\n\n//################################# APP ####################################\nfunction PmForm() {\n  const [form, setForm] = useState(initialState);\n  const navigate = useNavigate();\n  const { state } = useLocation();\n\n  useEffect(() => {\n    setForm(state);\n  }, [state]);\n\n  // carregando estilo customizado\n  const classes = useStyles();\n\n  const submitOrder = () => {\n    console.log(form);\n\n    // documentação para tempo real do firebase https://firebase.google.com/docs/database/web/start?authuser=0\n    const newPostKey = push(child(ref(database), \"ativos\")).key;\n\n    // const parsedData = JSON.parse(JSON.parse(scanResultWebCam));\n\n    set(ref(database, `ativos/${newPostKey}`), form);\n\n    navigate(\"/success\");\n  };\n\n  return (\n    <Card>\n      <h2 className={classes.title}>PM Form</h2>\n      <CardContent>\n        {/* Parte do codigo HTML responsavel por gerar o QR CODE */}\n\n        {/* Parte do codigo HTML responsavel por Ler o QR CODE */}\n        <h3>PM Form</h3>\n\n        <Form form={form} setForm={setForm} />\n        <Button\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={submitOrder}\n        >\n          Submit PM\n        </Button>\n        {/* END Parte do codigo HTML responsavel por Ler o QR CODE */}\n      </CardContent>\n    </Card>\n  );\n}\n\n// Criação de um estilo customizado\nconst useStyles = makeStyles((theme) => ({\n  conatiner: {\n    marginTop: 10,\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"#3f51b5\",\n    color: \"#fff\",\n    padding: 20,\n  },\n  btn: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n}));\nexport default PmForm;\n","import React from \"react\";\nimport { Container, makeStyles, Card, CardContent } from \"@material-ui/core\";\n\n//################################# APP ####################################\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.conatiner}>\n      <Card>\n        <CardContent>\n          <h3>Sucesso</h3>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\n// Criação de um estilo customizado\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: 10,\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"#3f51b5\",\n    color: \"#fff\",\n    padding: 20,\n  },\n  btn: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n}));\nexport default App;\n","import { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\nimport * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function BasicMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const navigate = useNavigate();\n\n  const PREFIX_PATH = process.env.REACT_APP_PREFIX_PATH\n    ? process.env.REACT_APP_PREFIX_PATH\n    : \"\";\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleRoute = (route) => {\n    navigate(`${PREFIX_PATH}${route}`);\n    handleClose();\n  };\n\n  return (\n    <>\n      <IconButton\n        className=\"button-icon\"\n        id=\"basic-button\"\n        aria-controls={open ? \"basic-menu\" : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n      >\n        <MenuIcon></MenuIcon>\n      </IconButton>\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        clas\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n      >\n        <MenuItem onClick={() => handleRoute(\"/reader-qrcode\")}>\n          Scan QR Code\n        </MenuItem>\n        <MenuItem onClick={() => handleRoute(\"/create-qrcode\")}>\n          Create QR Code\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { PREFIX_PATH } from \"../helper/constants\";\nimport { StyledHeader } from \"../styles\";\nimport BasicMenu from \"./MenuHeader\";\n\nfunction Header() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [title, setTitle] = useState(\"Instruções de Uso\");\n\n  const deltaPng = `${PREFIX_PATH}/assets/delta.png`;\n\n  useEffect(() => {\n    switch (location.pathname) {\n      case \"/\":\n        setTitle(\"Instruções de Uso\");\n        break;\n      case \"/reader-qrcode\":\n        setTitle(\"Leitor de QR Code\");\n        break;\n      case \"/create-qrcode\":\n        setTitle(\"Geração do QR Code\");\n        break;\n      default:\n        setTitle(\"Pedido de Manutenção\");\n    }\n  }, [location]);\n\n  const handleHome = () => {\n    navigate(`${PREFIX_PATH}/`);\n  };\n\n  return (\n    <StyledHeader>\n      <div className=\"content\">\n        <div className=\"content-left\">\n          <div className=\"image-container\" onClick={handleHome}>\n            <img src={deltaPng} alt=\"logo\" />\n          </div>\n          <h1>{title} </h1>\n        </div>\n        <BasicMenu></BasicMenu>\n      </div>\n    </StyledHeader>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PREFIX_PATH } from \"../helper/constants\";\nimport { ButtonPrimary, StyledManual } from \"../styles\";\n\nfunction UseManual() {\n  const navigate = useNavigate();\n  const srcImage = `${PREFIX_PATH}/assets/qrcode.png`;\n\n  console.log(process.env.PREFIX_PATH);\n  const handleButton = () => {\n    navigate(`${PREFIX_PATH}/reader-qrcode`);\n  };\n\n  return (\n    <StyledManual>\n      <h1>Seja bem-vindo(a) ao Delta!</h1>\n\n      <p>\n        O Sistema Delta permite a fácil identificação de ativos através de QR\n        Code, além do prático preenchimento e envio de Pedidos de Manutenção\n        (PM) para o Centro de Controle e Operação (CCO).\n      </p>\n\n      <div className=\"image-qr\">\n        <img src={srcImage} alt=\"qrCode\" />\n      </div>\n\n      <div className=\"instructions\">\n        <h1>Siga as intruções:</h1>\n\n        <div>\n          <span>1.</span>\n          <p>\n            Aponte a câmera do celular para o QR Code para que ocorra a leitura\n            da imagem\n          </p>\n        </div>\n        <div>\n          <span>2.</span>\n          <p>Após a leitura, receba os dados e informações sobre o ativo</p>\n        </div>\n        <div>\n          <span>3.</span>\n          <p>\n            Preencha o formulário do PM com todas as informações necessárias\n            Envie o PM para o CCO\n          </p>\n        </div>\n      </div>\n\n      <div className=\"action-button\">\n        <ButtonPrimary onClick={handleButton}>Ler QR Code</ButtonPrimary>\n      </div>\n    </StyledManual>\n  );\n}\n\nexport default UseManual;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { Container } from \"@material-ui/core\";\nimport CreateQrCode from \"./components/CreateQrcode\";\nimport ReaderQrCode from \"./components/ReaderQrCode\";\nimport PmForm from \"./components/PmForm\";\nimport SuccesForm from \"./components/SuccesForm\";\nimport Header from \"./components/Header\";\nimport UseManual from \"./components/UseManual\";\nimport { PREFIX_PATH } from \"./helper/constants\";\n\n//################################# APP ####################################\nfunction App() {\n  return (\n    <Container style={{ padding: 0 }}>\n      <Router>\n        <Header />\n\n        <Routes>\n          <Route exact path={`${PREFIX_PATH}/`} element={<UseManual />} />\n          <Route\n            exact\n            path={`${PREFIX_PATH}/create-qrcode`}\n            element={<CreateQrCode />}\n          />\n          <Route\n            exact\n            path={`${PREFIX_PATH}/reader-qrcode`}\n            element={<ReaderQrCode />}\n          />\n          <Route\n            exact\n            path={`${PREFIX_PATH}/reader-qrcode/form`}\n            element={<PmForm />}\n          />\n          <Route\n            exact\n            path={`${PREFIX_PATH}/success`}\n            element={<SuccesForm />}\n          />\n        </Routes>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}