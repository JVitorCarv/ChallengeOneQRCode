{"version":3,"sources":["components/Electric.js","components/Mechanical.js","components/Unidentified.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Electric","form","setForm","React","useState","faltaEnergia","chaveFusivel","tensaoNormal","cheiroQueimado","state","setState","handleChange","event","obj","target","name","checked","natureForm","Box","sx","display","FormControl","m","component","variant","FormLabel","FormGroup","FormControlLabel","control","Checkbox","onChange","label","FormHelperText","Mechanical","nivelSuccao","valvulaSuccao","valvulaRecalque","vibracaoAnormal","bombaTravada","barulhoAnormal","gaxetaVazamento","Unidentified","description","TextField","id","placeholder","multiline","value","Button","href","Form","attr","width","noValidate","autoComplete","required","problemDescription","e","operatorName","operatorPhone","select","nature","helperText","map","tipo","MenuItem","handleNature","app","initializeApp","apiKey","authDomain","databaseURL","database","getDatabase","initialState","ativo","tombamento","unidade","setor","useStyles","makeStyles","theme","conatiner","marginTop","title","justifyContent","alignItems","background","color","padding","btn","marginBottom","App","text","setText","imageUrl","setImageUrl","classes","generateQrCode","a","QRCode","toDataURL","response","console","log","Container","className","Card","CardContent","Grid","container","spacing","item","xl","lg","md","sm","xs","onClick","download","src","alt","delay","style","onError","error","onScan","result","newPostKey","push","child","ref","key","set","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.944670fc.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Box,\n  FormLabel,\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  FormHelperText,\n  Checkbox,\n} from \"@material-ui/core\";\n\nfunction Electric({ form, setForm }) {\n  const [state, setState] = React.useState({\n    faltaEnergia: false,\n    chaveFusivel: false,\n    tensaoNormal: false,\n    cheiroQueimado: false,\n  });\n\n  const handleChange = (event) => {\n    const obj = { ...state, [event.target.name]: event.target.checked };\n\n    setState(obj);\n    setForm({ ...form, natureForm: obj });\n  };\n\n  const { faltaEnergia, chaveFusivel, tensaoNormal, cheiroQueimado } = state;\n\n  return (\n    <div>\n      <Box sx={{ display: \"flex\" }}>\n        <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\n          <FormLabel component=\"legend\">Marque as caixas</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={faltaEnergia}\n                  onChange={handleChange}\n                  name=\"faltaEnergia\"\n                />\n              }\n              label=\"Há falta de energia na vizinhança?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={chaveFusivel}\n                  onChange={handleChange}\n                  name=\"chaveFusivel\"\n                />\n              }\n              label=\"Chave fusível (canela, banana) aberta?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={tensaoNormal}\n                  onChange={handleChange}\n                  name=\"tensaoNormal\"\n                />\n              }\n              label=\"Tensão da unidade normal?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={cheiroQueimado}\n                  onChange={handleChange}\n                  name=\"cheiroQueimado\"\n                />\n              }\n              label=\"Cheiro de queimado?\"\n            />\n          </FormGroup>\n          <FormHelperText>\n            Marque as caixas de acordo com os problemas identificados\n          </FormHelperText>\n        </FormControl>\n      </Box>\n    </div>\n  );\n}\n\nexport default Electric;\n","import React from \"react\";\nimport {\n  Box,\n  FormLabel,\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  FormHelperText,\n  Checkbox,\n} from \"@material-ui/core\";\n\nfunction Mechanical({ form, setForm }) {\n  const [state, setState] = React.useState({\n    nivelSuccao: false,\n    valvulaSuccao: false,\n    valvulaRecalque: false,\n    vibracaoAnormal: false,\n    bombaTravada: false,\n    barulhoAnormal: false,\n    gaxetaVazamento: false,\n  });\n\n  const handleChange = (event) => {\n    const obj = { ...state, [event.target.name]: event.target.checked };\n\n    setState(obj);\n    setForm({ ...form, natureForm: obj });\n  };\n\n  const {\n    nivelSuccao,\n    valvulaSuccao,\n    valvulaRecalque,\n    vibracaoAnormal,\n    bombaTravada,\n    barulhoAnormal,\n    gaxetaVazamento,\n  } = state;\n\n  return (\n    <div>\n      <Box sx={{ display: \"flex\" }}>\n        <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\n          <FormLabel component=\"legend\">Marque as caixas</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={nivelSuccao}\n                  onChange={handleChange}\n                  name=\"nivelSuccao\"\n                />\n              }\n              label=\"O nível de succção está normal?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={valvulaSuccao}\n                  onChange={handleChange}\n                  name=\"valvulaSuccao\"\n                />\n              }\n              label=\"A válvula de sucção está aberta?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={valvulaRecalque}\n                  onChange={handleChange}\n                  name=\"valvulaRecalque\"\n                />\n              }\n              label=\"A válvula de recalque está aberta?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={vibracaoAnormal}\n                  onChange={handleChange}\n                  name=\"vibracaoAnormal\"\n                />\n              }\n              label=\"A vibração está anormal?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={bombaTravada}\n                  onChange={handleChange}\n                  name=\"bombaTravada\"\n                />\n              }\n              label=\"A bomba está travada?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={barulhoAnormal}\n                  onChange={handleChange}\n                  name=\"barulhoAnormal\"\n                />\n              }\n              label=\"Há um barulho anormal?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={gaxetaVazamento}\n                  onChange={handleChange}\n                  name=\"gaxetaVazamento\"\n                />\n              }\n              label=\"A gaxeta está com vazamento?\"\n            />\n          </FormGroup>\n          <FormHelperText>\n            Marque as caixas de acordo com os problemas identificados\n          </FormHelperText>\n        </FormControl>\n      </Box>\n    </div>\n  );\n}\n\nexport default Mechanical;\n","import React from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nfunction Unidentified({ form, setForm }) {\n  const [state, setState] = React.useState({\n    description: \"\",\n  });\n\n  const handleChange = (event) => {\n    const obj = { ...state, [event.target.name]: event.target.checked };\n\n    setState(obj);\n    setForm({ ...form, natureForm: obj });\n  };\n\n  return (\n    <div>\n      <TextField\n        id=\"outlined-textarea\"\n        label=\"Descrição adicional\"\n        placeholder=\"Escreva aqui...\"\n        multiline\n        value={state.description}\n        onChange={handleChange}\n      />\n      <p>Caso sinta necessidade, entre em contato com o CCO:</p>\n      <Button\n        variant=\"contained\"\n        href=\"https://servicos.compesa.com.br\"\n        target=\"_blank\"\n      >\n        Entrar em contato com CCO\n      </Button>\n    </div>\n  );\n}\n\nexport default Unidentified;\n","import React from \"react\";\nimport { TextField, Box, MenuItem } from \"@material-ui/core\";\nimport Electric from \"./Electric\";\nimport Mechanical from \"./Mechanical\";\nimport Unidentified from \"./Unidentified\";\n\nfunction Form({ form, setForm }) {\n  const naturezas = [\n    {\n      value: 1,\n      label: \"Elétrico\",\n    },\n    {\n      value: 2,\n      label: \"Mecânico\",\n    },\n    {\n      value: 3,\n      label: \"Não identificada\",\n    },\n  ];\n\n  const handleChange = (event, attr) => {\n    setForm({ ...form, [attr]: event.target.value });\n  };\n\n  const handleNature = () => {\n    switch (form.nature) {\n      case 1:\n        return <Electric setForm={setForm} form={form} />;\n      case 2:\n        return <Mechanical setForm={setForm} form={form} />;\n      default:\n        return <Unidentified setForm={setForm} form={form} />;\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <div>\n        <TextField\n          required\n          id=\"outlined-textarea\"\n          label=\"Descrição do problema\"\n          placeholder=\"Escreva aqui...\"\n          multiline\n          value={form.problemDescription}\n          onChange={(e) => handleChange(e, \"problemDescription\")}\n        />\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Seu nome\"\n          placeholder=\"Insira seu nome...\"\n          value={form.operatorName}\n          onChange={(e) => handleChange(e, \"operatorName\")}\n        />\n        <TextField\n          required\n          id=\"outlined-password-input\"\n          label=\"Escreva seu telefone\"\n          value={form.operatorPhone}\n          onChange={(e) => handleChange(e, \"operatorPhone\")}\n        />\n        <TextField\n          id=\"outlined-select-natureza\"\n          select\n          label=\"Natureza do problema\"\n          value={form.nature}\n          onChange={(e) => handleChange(e, \"nature\")}\n          helperText=\"Selecione a natureza do problema\"\n        >\n          {naturezas.map((tipo) => (\n            <MenuItem key={tipo.value} value={tipo.value}>\n              {tipo.label}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        {form.nature && handleNature()}\n      </div>\n    </Box>\n  );\n}\n\nexport default Form;\n","import React, { useState } from \"react\";\nimport {\n  Container,\n  Card,\n  CardContent,\n  makeStyles,\n  Grid,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport QRCode from \"qrcode\";\nimport QrReader from \"react-qr-reader\";\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, set, ref, child, push } from \"firebase/database\";\n\nimport Form from \"./components/Form\";\n\n//################################# START Firebase Settings ####################################\n//quando depois eu explico para vocês como configura o firebase, por hora podem usar o meu\nconst firebaseConfig = {\n  apiKey:\n    \"AAAAplipsUI:APA91bGQbCDPCuHA-XQRVNJRvYysIqzPqJ4JXk4d9iowYwHgCel81VZCQYqgdqEQaVX2qGWmwyLjGrnkpKtAs56LhlFZaCdRHZMpn9XVLcxtEc7c5GeiD-uMuibIkDFAQVpfV7mtFduP\",\n  authDomain: \"summerjob-9c9bf.firebaseapp.com\",\n  databaseURL: \"https://summerjob-9c9bf-default-rtdb.firebaseio.com/\",\n};\nconst app = initializeApp(firebaseConfig);\n\n// Get a reference to the database service\nconst database = getDatabase(app);\n//################################# END Firebase Settings ####################################\n\nconst initialState = {\n  ativo: \"\",\n  tombamento: \"\",\n  unidade: \"\",\n  setor: \"\",\n  problemDescription: \"\",\n  operatorName: \"\",\n  operatorPhone: \"\",\n  nature: null,\n  natureForm: null,\n};\n\n//################################# APP ####################################\nfunction App() {\n  // States do app\n  const [text, setText] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  // const [scanResultWebCam, setScanResultWebCam] = useState(\"\");\n  const [form, setForm] = useState(initialState);\n\n  // carregando estilo customizado\n  const classes = useStyles();\n\n  // codigo responsavel por gerar o QR code a partir do dado passado para o input\n  const generateQrCode = async () => {\n    try {\n      const response = await QRCode.toDataURL(text);\n      setImageUrl(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // função responsavel por gerenciar os erros da leitura do QR CODE\n  const handleErrorWebCam = (error) => {\n    console.log(error);\n  };\n\n  // função executada quando há uma leitura do QR code pela camera do notebook\n  const handleScanWebCam = (result) => {\n    console.log(result);\n    if (result) {\n      setForm({ ...form, ...result });\n    }\n  };\n\n  // função responsavel por INSERIR os dados obtidos a partir da leitura do QR CODE\n  // para o firebase\n  const submitOrder = () => {\n    console.log(form);\n\n    // documentação para tempo real do firebase https://firebase.google.com/docs/database/web/start?authuser=0\n    const newPostKey = push(child(ref(database), \"ativos\")).key;\n\n    // const parsedData = JSON.parse(JSON.parse(scanResultWebCam));\n\n    set(ref(database, `ativos/${newPostKey}`), form);\n  };\n\n  return (\n    <Container className={classes.conatiner}>\n      <Card>\n        <h2 className={classes.title}>\n          Generate Download & Scan QR Code with React js\n        </h2>\n        <CardContent>\n          <Grid container spacing={2}>\n            {/* Parte do codigo HTML responsavel por gerar o QR CODE */}\n            <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\n              <TextField\n                label=\"Enter Text Here\"\n                onChange={(e) => setText(e.target.value)}\n              />\n              <Button\n                className={classes.btn}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => generateQrCode()}\n              >\n                Generate\n              </Button>\n              <br />\n              <br />\n              <br />\n              {imageUrl ? (\n                <a href={imageUrl} download>\n                  <img src={imageUrl} alt=\"img\" />\n                </a>\n              ) : null}\n            </Grid>\n            {/* END Parte do codigo HTML responsavel por gerar o QR CODE */}\n\n            {/* Parte do codigo HTML responsavel por Ler o QR CODE */}\n            <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\n              <h3>Qr Code Scan by Web Cam</h3>\n              <QrReader\n                delay={300}\n                style={{ width: \"100%\" }}\n                onError={handleErrorWebCam}\n                onScan={handleScanWebCam}\n              />\n              {/* <h3>Scanned By WebCam Code: {scanResultWebCam}</h3> */}\n              <Form form={form} setForm={setForm} />\n              <Button\n                className={classes.btn}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={submitOrder}\n              >\n                Submit OS\n              </Button>\n            </Grid>\n            {/* END Parte do codigo HTML responsavel por Ler o QR CODE */}\n          </Grid>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\n// Criação de um estilo customizado\nconst useStyles = makeStyles((theme) => ({\n  conatiner: {\n    marginTop: 10,\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"#3f51b5\",\n    color: \"#fff\",\n    padding: 20,\n  },\n  btn: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n}));\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}