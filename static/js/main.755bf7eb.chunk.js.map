{"version":3,"sources":["components/CreateQrcode.js","helper/constants.js","styles.js","components/ReaderQrCode.js","components/Electric.js","components/Mechanical.js","components/Unidentified.js","components/Form.js","components/PmForm.js","components/SuccesForm.js","components/MenuHeader.js","components/Header.js","components/UseManual.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","conatiner","marginTop","title","display","justifyContent","alignItems","background","color","padding","btn","marginBottom","CreateQrCode","useState","imageUrl","setImageUrl","nomeAtivo","setNomeAtivo","tombamento","setTombamento","unidade","setUnidade","setor","setSetor","classes","generateQrCode","a","QRCode","toDataURL","parseInt","response","console","log","Card","CardContent","TextField","required","id","label","placeholder","multiline","onChange","e","target","value","Button","className","variant","onClick","href","download","src","alt","PREFIX_PATH","process","StyledHeader","styled","header","StyledManual","div","StyledScanQr","ButtonSecondary","ButtonPrimary","ReaderQrCode","navigate","useNavigate","delay","style","width","onError","error","onScan","result","parsed","JSON","parse","state","helperText","Electric","form","setForm","React","faltaEnergia","chaveFusivel","tensaoNormal","cheiroQueimado","setState","handleChange","event","obj","name","checked","natureForm","Box","sx","FormControl","m","component","FormLabel","FormGroup","FormControlLabel","control","Checkbox","FormHelperText","Mechanical","nivelSuccao","valvulaSuccao","valvulaRecalque","vibracaoAnormal","bombaTravada","barulhoAnormal","gaxetaVazamento","Unidentified","description","Form","attr","noValidate","autoComplete","ativo","disabled","problemDescription","operatorName","operatorPhone","select","nature","map","tipo","MenuItem","handleNature","app","initializeApp","apiKey","authDomain","databaseURL","database","getDatabase","initialState","PmForm","useLocation","useEffect","newPostKey","push","child","ref","key","set","container","App","Container","BasicMenu","anchorEl","setAnchorEl","open","Boolean","handleClose","handleRoute","route","IconButton","aria-controls","undefined","aria-haspopup","aria-expanded","currentTarget","Menu","onClose","clas","MenuListProps","Header","location","setTitle","pathname","UseManual","srcImage","exact","path","element","SuccesForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAiGA,IAAMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,UAAW,IAEbC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,WAAY,UACZC,MAAO,OACPC,QAAS,IAEXC,IAAK,CACHR,UAAW,GACXS,aAAc,QAGHC,EAxGf,WAAwB,MAGUC,mBAAS,IAHnB,mBAGfC,EAHe,KAGLC,EAHK,OAKYF,mBAAS,IALrB,mBAKfG,EALe,KAKJC,EALI,OAMcJ,mBAAS,IANvB,mBAMfK,EANe,KAMHC,EANG,OAOQN,mBAAS,IAPjB,mBAOfO,EAPe,KAONC,EAPM,OAQIR,mBAAS,IARb,mBAQfS,EARe,KAQRC,EARQ,KAUhBC,EAAU1B,IAGV2B,EAAc,uCAAG,4BAAAC,EAAA,+EAGIC,IAAOC,UAAU,sBAAwBC,SAASX,GAAc,qBAAuBE,EAAU,sBAAwBE,EAAQ,sBAAwBN,EAAY,SAHzK,OAGbc,EAHa,OAInBf,EAAYe,GAJO,gDAMnBC,QAAQC,IAAR,MANmB,yDAAH,qDAUpB,OACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WAIE,cAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,2BACNC,YAAY,kBACZC,WAAS,EAETC,SAAU,SAACC,GAAD,OAAOzB,EAAayB,EAAEC,OAAOC,UAEzC,cAACT,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,WACNC,YAAY,kBAEZE,SAAU,SAACC,GAAD,OAAOvB,EAAcuB,EAAEC,OAAOC,UAE1C,cAACT,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,sBACNC,YAAY,kBAEZE,SAAU,SAACC,GAAD,OAAOrB,EAAWqB,EAAEC,OAAOC,UAEvC,cAACT,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,oBACNC,YAAY,kBAEZE,SAAU,SAACC,GAAD,OAAOnB,EAASmB,EAAEC,OAAOC,UAKrC,cAACC,EAAA,EAAD,CACEC,UAAWtB,EAAQd,IACnBqC,QAAQ,YACRvC,MAAM,UACNwC,QAAS,kBAAMvB,KAJjB,mBAQA,uBACA,uBACA,uBACCX,EACC,mBAAGmC,KAAMnC,EAAUoC,UAAQ,EAA3B,SACE,qBAAKC,IAAKrC,EAAUsC,IAAI,UAExB,W,oCC1FCC,EACTC,sB,uyGCEG,IAAMC,EAAeC,IAAOC,OAAV,KA6CZC,EAAeF,IAAOG,IAAV,KAmEZC,EAAeJ,IAAOG,IAAV,KA2DZE,EAAkBL,YAAOX,IAAPW,CAAH,KAIfM,EAAgBN,YAAOX,IAAPW,CAAH,KCnHXO,MAvDf,WACE,IAAMC,EAAWC,cAoBjB,OACE,eAACL,EAAD,WACE,2FAEA,qBAAKd,UAAU,UAAf,SACE,cAAC,IAAD,CACEoB,MAAO,IACPC,MAAO,CAAEC,MAAO,QAChBC,QAxBkB,SAACC,GACzBvC,QAAQC,IAAIsC,IAwBNC,OApBiB,SAACC,GACxB,GAAIA,EAAQ,CACV,IAAMC,EAASC,KAAKC,MAAMD,KAAKC,MAAMH,IACrCR,EAAS,GAAD,OAAIX,EAAJ,uBAAsC,CAAEuB,MAAOH,UAqBvD,mBAAG3B,UAAU,UAAb,mFAIA,qBAAKA,UAAU,eAAf,SACE,cAAC,IAAD,CACET,GAAG,sBACHC,MAAM,WACNuC,WAAW,qBACX9B,QAAQ,eAIZ,sBAAKD,UAAU,iBAAf,UACE,cAACe,EAAD,CAAiBb,QA/BJ,WACjBgB,EAAS,GAAD,OAAIX,EAAJ,OA8BJ,sBACA,cAACS,EAAD,kC,yGC2BOgB,OAzEf,YAAsC,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAAW,EACTC,IAAMpE,SAAS,CACvCqE,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,gBAAgB,IALiB,mBAC5BT,EAD4B,KACrBU,EADqB,KAQ7BC,EAAe,SAACC,GACpB,IAAMC,EAAG,2BAAQb,GAAR,kBAAgBY,EAAM7C,OAAO+C,KAAOF,EAAM7C,OAAOgD,UAE1DL,EAASG,GACTT,EAAQ,2BAAKD,GAAN,IAAYa,WAAYH,MAGzBP,EAA6DN,EAA7DM,aAAcC,EAA+CP,EAA/CO,aAAcC,EAAiCR,EAAjCQ,aAAcC,EAAmBT,EAAnBS,eAElD,OACE,8BACE,cAACQ,EAAA,EAAD,CAAKC,GAAI,CAAE1F,QAAS,QAApB,SACE,eAAC2F,EAAA,EAAD,CAAaD,GAAI,CAAEE,EAAG,GAAKC,UAAU,WAAWlD,QAAQ,WAAxD,UACE,cAACmD,EAAA,EAAD,CAAWD,UAAU,SAArB,8BACA,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEX,QAAST,EACTzC,SAAU8C,EACVG,KAAK,iBAGTpD,MAAM,6CAER,cAAC8D,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEX,QAASR,EACT1C,SAAU8C,EACVG,KAAK,iBAGTpD,MAAM,8CAER,cAAC8D,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEX,QAASP,EACT3C,SAAU8C,EACVG,KAAK,iBAGTpD,MAAM,iCAER,cAAC8D,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEX,QAASN,EACT5C,SAAU8C,EACVG,KAAK,mBAGTpD,MAAM,2BAGV,cAACiE,EAAA,EAAD,gFCkDKC,OAlHf,YAAwC,IAAlBzB,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAAW,EACXC,IAAMpE,SAAS,CACvC4F,aAAa,EACbC,eAAe,EACfC,iBAAiB,EACjBC,iBAAiB,EACjBC,cAAc,EACdC,gBAAgB,EAChBC,iBAAiB,IARkB,mBAC9BnC,EAD8B,KACvBU,EADuB,KAW/BC,EAAe,SAACC,GACpB,IAAMC,EAAG,2BAAQb,GAAR,kBAAgBY,EAAM7C,OAAO+C,KAAOF,EAAM7C,OAAOgD,UAE1DL,EAASG,GACTT,EAAQ,2BAAKD,GAAN,IAAYa,WAAYH,MAI/BgB,EAOE7B,EAPF6B,YACAC,EAME9B,EANF8B,cACAC,EAKE/B,EALF+B,gBACAC,EAIEhC,EAJFgC,gBACAC,EAGEjC,EAHFiC,aACAC,EAEElC,EAFFkC,eACAC,EACEnC,EADFmC,gBAGF,OACE,8BACE,cAAClB,EAAA,EAAD,CAAKC,GAAI,CAAE1F,QAAS,QAApB,SACE,eAAC2F,EAAA,EAAD,CAAaD,GAAI,CAAEE,EAAG,GAAKC,UAAU,WAAWlD,QAAQ,WAAxD,UACE,cAACmD,EAAA,EAAD,CAAWD,UAAU,SAArB,8BACA,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEX,QAASc,EACThE,SAAU8C,EACVG,KAAK,gBAGTpD,MAAM,gDAER,cAAC8D,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEX,QAASe,EACTjE,SAAU8C,EACVG,KAAK,kBAGTpD,MAAM,iDAER,cAAC8D,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEX,QAASgB,EACTlE,SAAU8C,EACVG,KAAK,oBAGTpD,MAAM,6CAER,cAAC8D,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEX,QAASiB,EACTnE,SAAU8C,EACVG,KAAK,oBAGTpD,MAAM,sCAER,cAAC8D,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEX,QAASkB,EACTpE,SAAU8C,EACVG,KAAK,iBAGTpD,MAAM,6BAER,cAAC8D,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEX,QAASmB,EACTrE,SAAU8C,EACVG,KAAK,mBAGTpD,MAAM,8BAER,cAAC8D,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEX,QAASoB,EACTtE,SAAU8C,EACVG,KAAK,oBAGTpD,MAAM,uCAGV,cAACiE,EAAA,EAAD,gFC9EKS,OAnCf,YAA0C,IAAlBjC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAAW,EACbC,IAAMpE,SAAS,CACvCoG,YAAa,KAFwB,mBAChCrC,EADgC,KACzBU,EADyB,KAYvC,OACE,gCACE,cAACnD,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,4CACNC,YAAY,kBACZC,WAAS,EACTI,MAAOgC,EAAMqC,YACbxE,SAAU,SAACC,GAAD,OAhBK,SAAC8C,GACpB,IAAMC,EAAG,2BAAQb,GAAR,IAAeqC,YAAazB,EAAM7C,OAAOC,QAElD0C,EAASG,GACTT,EAAQ,2BAAKD,GAAN,IAAYa,WAAYH,KAYVF,CAAa7C,MAEhC,oFACA,cAACG,EAAA,EAAD,CACEE,QAAQ,YACRE,KAAK,kCACLN,OAAO,SAHT,2CCiGSuE,OAtHf,YAAkC,IAAlBnC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAgBdO,EAAe,SAACC,EAAO2B,GAC3BnC,EAAQ,2BAAKD,GAAN,kBAAaoC,EAAO3B,EAAM7C,OAAOC,UAc1C,OACE,cAACiD,EAAA,EAAD,CACEI,UAAU,OACVH,GAAI,CACF,uBAAwB,CAAEE,EAAG,EAAG5B,MAAO,SAEzCgD,YAAU,EACVC,aAAa,MANf,SAQE,gCACE,cAAClF,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,QACHC,MAAM,kBACNC,YAAY,iBACZK,MAAOmC,EAAKuC,MACZC,UAAQ,IAEV,cAACpF,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,QACHC,MAAM,iBACNC,YAAY,iBACZK,MAAOmC,EAAKzD,MACZiG,UAAQ,IAEV,cAACpF,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,aACHC,MAAM,uBACNC,YAAY,iBACZK,MAAOmC,EAAK7D,WACZqG,UAAQ,IAEV,cAACpF,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,UACHC,MAAM,oBACNC,YAAY,iBACZK,MAAOmC,EAAK3D,QACZmG,UAAQ,IAEV,cAACpF,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,8BACNC,YAAY,kBACZC,WAAS,EACTI,MAAOmC,EAAKyC,mBACZ/E,SAAU,SAACC,GAAD,OAAO6C,EAAa7C,EAAG,yBAEnC,cAACP,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,WACNC,YAAY,qBACZK,MAAOmC,EAAK0C,aACZhF,SAAU,SAACC,GAAD,OAAO6C,EAAa7C,EAAG,mBAEnC,cAACP,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,0BACHC,MAAM,uBACNM,MAAOmC,EAAK2C,cACZjF,SAAU,SAACC,GAAD,OAAO6C,EAAa7C,EAAG,oBAEnC,cAACP,EAAA,EAAD,CACEE,GAAG,2BACHsF,QAAM,EACNrF,MAAM,uBACNM,MAAOmC,EAAK6C,OACZnF,SAAU,SAACC,GAAD,OAAO6C,EAAa7C,EAAG,WACjCmC,WAAW,mCANb,SAhGY,CAChB,CACEjC,MAAO,EACPN,MAAO,eAET,CACEM,MAAO,EACPN,MAAO,eAET,CACEM,MAAO,EACPN,MAAO,wBA6FQuF,KAAI,SAACC,GAAD,OACb,cAACC,EAAA,EAAD,CAA2BnF,MAAOkF,EAAKlF,MAAvC,SACGkF,EAAKxF,OADOwF,EAAKlF,YAMvBmC,EAAK6C,QA5FS,WACnB,OAAQ7C,EAAK6C,QACX,KAAK,EACH,OAAO,cAAC,GAAD,CAAU5C,QAASA,EAASD,KAAMA,IAC3C,KAAK,EACH,OAAO,cAAC,GAAD,CAAYC,QAASA,EAASD,KAAMA,IAC7C,QACE,OAAO,cAAC,GAAD,CAAcC,QAASA,EAASD,KAAMA,KAqF7BiD,SCvGlBC,GAAMC,YANW,CACrBC,OACE,2JACFC,WAAY,kCACZC,YAAa,yDAKTC,GAAWC,YAAYN,IAGvBO,GAAe,CACnBlB,MAAO,GACPpG,WAAY,GACZE,QAAS,GACTE,MAAO,GACPkG,mBAAoB,GACpBC,aAAc,GACdC,cAAe,GACfE,OAAQ,KACRhC,WAAY,MAsDd,IAAM9F,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,UAAW,IAEbC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,WAAY,UACZC,MAAO,OACPC,QAAS,IAEXC,IAAK,CACHR,UAAW,GACXS,aAAc,QAGH8H,GAnEf,WAAmB,IAAD,EACQ5H,mBAAS2H,IADjB,mBACTzD,EADS,KACHC,EADG,KAEVhB,EAAWC,cACTW,EAAU8D,cAAV9D,MAER+D,qBAAU,WACR3D,EAAQJ,KACP,CAACA,IAGJ,IAAMpD,EAAU1B,KAehB,OACE,eAACmC,EAAA,EAAD,WACE,oBAAIa,UAAWtB,EAAQrB,MAAvB,iCACA,eAAC+B,EAAA,EAAD,WAIE,4DAEA,cAAC,GAAD,CAAM6C,KAAMA,EAAMC,QAASA,IAC3B,cAACnC,EAAA,EAAD,CACEC,UAAWtB,EAAQd,IACnBqC,QAAQ,YACRvC,MAAM,UACNwC,QA3BY,WAClBjB,QAAQC,IAAI+C,GAGZ,IAAM6D,EAAaC,YAAKC,YAAMC,YAAIT,IAAW,WAAWU,IAIxDC,YAAIF,YAAIT,GAAD,iBAAqBM,IAAe7D,GAE3Cf,EAAS,aAaL,8BClDR,IAAMlE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCkJ,UAAW,CACThJ,UAAW,IAEbC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,WAAY,UACZC,MAAO,OACPC,QAAS,IAEXC,IAAK,CACHR,UAAW,GACXS,aAAc,QAGHwI,GAhCf,WACE,IAAM3H,EAAU1B,KAEhB,OACE,cAACsJ,EAAA,EAAD,CAAWtG,UAAWtB,EAAQvB,UAA9B,SACE,cAACgC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,gD,8BCNK,SAASmH,KAAa,IAAD,EACFpE,WAAe,MADb,mBAC3BqE,EAD2B,KACjBC,EADiB,KAE5BC,EAAOC,QAAQH,GACftF,EAAWC,cASXyF,EAAc,WAClBH,EAAY,OAGRI,EAAc,SAACC,GACnB5F,EAAS,GAAD,OAXNV,uBAWM,OAAkBsG,IAC1BF,KAGF,OACE,qCACE,cAACG,GAAA,EAAD,CACE/G,UAAU,cACVT,GAAG,eACHyH,gBAAeN,EAAO,kBAAeO,EACrCC,gBAAc,OACdC,gBAAeT,EAAO,YAASO,EAC/B/G,QApBc,SAACwC,GACnB+D,EAAY/D,EAAM0E,gBAahB,SAQE,cAAC,KAAD,MAEF,eAACC,GAAA,EAAD,CACE9H,GAAG,aACHiH,SAAUA,EACVE,KAAMA,EACNY,QAASV,EACTW,MAAI,EACJC,cAAe,CACb,kBAAmB,gBAPvB,UAUE,cAACvC,EAAA,EAAD,CAAU/E,QAAS,kBAAM2G,EAAY,mBAArC,8BAGA,cAAC5B,EAAA,EAAD,CAAU/E,QAAS,kBAAM2G,EAAY,mBAArC,iCCDOY,OA1Cf,WACE,IAAMvG,EAAWC,cACXuG,EAAW9B,cAFD,EAGU7H,mBAAS,2BAHnB,mBAGTV,EAHS,KAGFsK,EAHE,KA2BhB,OApBA9B,qBAAU,WACR,OAAQ6B,EAASE,UACf,IAAK,IACHD,EAAS,2BACT,MACF,IAAK,iBACHA,EAAS,qBACT,MACF,IAAK,iBACHA,EAAS,4BACT,MACF,QACEA,EAAS,iCAEZ,CAACD,IAOF,cAACjH,EAAD,UACE,sBAAKT,UAAU,UAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,kBAAkBE,QARtB,WACjBgB,EAAS,GAAD,OAAIX,EAAJ,OAOF,SACE,qBAAKF,IA3BD,kCA2BgBC,IAAI,WAE1B,+BAAKjD,EAAL,UAEF,cAACkJ,GAAD,UCcOsB,OArDf,WACE,IAAM3G,EAAWC,cACX2G,EAAQ,UAAMvH,EAAN,sBAOd,OALAtB,QAAQC,IAAIsB,8NAAYD,aAMtB,eAACK,EAAD,WACE,6DAEA,0PAMA,qBAAKZ,UAAU,WAAf,SACE,qBAAKK,IAAKyH,EAAUxH,IAAI,aAG1B,sBAAKN,UAAU,eAAf,UACE,0DAEA,gCACE,sCACA,oHAKF,gCACE,sCACA,wGAEF,gCACE,sCACA,yIAOJ,qBAAKA,UAAU,gBAAf,SACE,cAACgB,EAAD,CAAed,QA1CA,WACnBgB,EAAS,GAAD,OAAIX,EAAJ,oBAyCJ,+BCNO8F,OAlCf,WACE,OACE,cAACC,EAAA,EAAD,CAAWjF,MAAO,CAAE1D,QAAS,GAA7B,SACE,eAAC,IAAD,WACE,cAAC,GAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoK,OAAK,EAACC,KAAI,UAAKzH,EAAL,KAAqB0H,QAAS,cAAC,GAAD,MAC/C,cAAC,IAAD,CACEF,OAAK,EACLC,KAAI,UAAKzH,EAAL,kBACJ0H,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CACEF,OAAK,EACLC,KAAI,UAAKzH,EAAL,kBACJ0H,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CACEF,OAAK,EACLC,KAAI,UAAKzH,EAAL,uBACJ0H,QAAS,cAAC,GAAD,MAEX,cAAC,IAAD,CACEF,OAAK,EACLC,KAAI,UAAKzH,EAAL,YACJ0H,QAAS,cAACC,GAAD,eC1BNC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.755bf7eb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  makeStyles,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport QRCode from \"qrcode\";\n\nfunction CreateQrCode() {\n  // States do app\n  // const [text, setText] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  const [nomeAtivo, setNomeAtivo] = useState(\"\");\n  const [tombamento, setTombamento] = useState(\"\");\n  const [unidade, setUnidade] = useState(\"\");\n  const [setor, setSetor] = useState(\"\");\n\n  const classes = useStyles();\n\n  // codigo responsavel por gerar o QR code a partir do dado passado para o input\n  const generateQrCode = async () => {\n    try {\n      // const response = await QRCode.toDataURL(text);\n      const response = await QRCode.toDataURL('\"{\\\\\"tombamento\\\\\":' + parseInt(tombamento) + ',\\\\\"unidade\\\\\":\\\\\"' + unidade + '\\\\\",\\\\\"setor\\\\\":\\\\\"' + setor + '\\\\\",\\\\\"ativo\\\\\":\\\\\"' + nomeAtivo + '\\\\\"}\"');\n      setImageUrl(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Card>\n      <CardContent>\n\n{/****************************************************************************************************/}\n\n        <TextField\n          required\n          id=\"outlined-textarea\"\n          label=\"Descrição do ativo\"\n          placeholder=\"Escreva aqui...\"\n          multiline\n          // value={form.problemDescription}\n          onChange={(e) => setNomeAtivo(e.target.value)}\n        />\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"ID Alpha\"\n          placeholder=\"Escreva aqui...\"\n          // value={form.operatorName}\n          onChange={(e) => setTombamento(e.target.value)}\n        />\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Unidade do ativo...\"\n          placeholder=\"Escreva aqui...\"\n          // value={form.operatorPhone}\n          onChange={(e) => setUnidade(e.target.value)}\n        />\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Setor do ativo...\"\n          placeholder=\"Escreva aqui...\"\n          // value={form.nature}\n          onChange={(e) => setSetor(e.target.value)}\n        ></TextField>\n\n{/****************************************************************************************************/}\n\n        <Button\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => generateQrCode()}\n        >\n          Gerar\n        </Button>\n        <br />\n        <br />\n        <br />\n        {imageUrl ? (\n          <a href={imageUrl} download>\n            <img src={imageUrl} alt=\"img\" />\n          </a>\n        ) : null}\n      </CardContent>\n    </Card>\n  );\n}\n\n// Criação de um estilo customizado\nconst useStyles = makeStyles((theme) => ({\n  conatiner: {\n    marginTop: 10,\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"#3f51b5\",\n    color: \"#fff\",\n    padding: 20,\n  },\n  btn: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n}));\nexport default CreateQrCode;\n","export const PREFIX_PATH = process.env.REACT_APP_PREFIX_PATH\n  ? process.env.REACT_APP_PREFIX_PATH\n  : \"\";\n","import { Button } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nexport const StyledHeader = styled.header`\n  background: #21419e;\n  width: 100%;\n  height: 56px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  .content {\n    display: flex;\n    padding: 10px;\n    align-items: center;\n    width: 100%;\n    justify-content: space-between;\n\n    .content-left {\n      display: flex;\n    }\n\n    .image-container {\n      cursor: pointer;\n      width: 31px;\n      height: 31px;\n      img {\n        width: 31px;\n        height: 31px;\n      }\n    }\n\n    .button-icon {\n      margin-right: 10px;\n      color: white;\n    }\n\n    h1 {\n      color: #ffffff;\n      font-family: Roboto;\n      font-style: normal;\n      font-weight: 500;\n      font-size: 20px;\n      margin: 0 0 0 10px;\n    }\n  }\n`;\n\nexport const StyledManual = styled.div`\n  font-family: Roboto;\n  font-style: normal;\n  padding: 10px;\n\n  h1 {\n    font-weight: 500;\n    font-size: 20px;\n    color: #000000;\n  }\n\n  p {\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 24px;\n    text-align: justify;\n    letter-spacing: 0.15px;\n    color: #1a1a1a;\n  }\n\n  .image-qr {\n    display: flex;\n    justify-content: center;\n\n    img {\n      width: 200px;\n      height: 149px;\n    }\n  }\n\n  .action-button {\n    display: flex;\n    justify-content: center;\n    margin-top: 40px;\n  }\n\n  .instructions {\n    h1 {\n      font-weight: bold;\n      font-size: 16px;\n      line-height: 24px;\n      text-align: justify;\n      letter-spacing: 0.15px;\n      color: #1a1a1a;\n    }\n    div {\n      display: flex;\n\n      span {\n        font-weight: bold;\n        font-size: 16px;\n        color: #1a1a1a;\n        margin-right: 10px;\n      }\n\n      p {\n        font-size: 16px;\n        line-height: 24px;\n        text-align: justify;\n        letter-spacing: 0.15px;\n        color: #1a1a1a;\n        margin: 0;\n      }\n    }\n  }\n`;\n\nexport const StyledScanQr = styled.div`\n  display: flex;\n  justify-content: center;\n  font-family: Roboto;\n  font-style: normal;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n\n  h1 {\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 24px;\n    text-align: center;\n    letter-spacing: 0.15px;\n    color: #1a1a1a;\n  }\n\n  section {\n    > div {\n      box-shadow: rgba(141, 197, 68, 1) 0px 0px 0px 5px inset !important;\n      width: 120% !important;\n      height: 120% !important;\n      left: -20px !important;\n      top: -20px !important;\n    }\n  }\n\n  .action-buttons {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 30px;\n\n    button {\n      margin: 10px;\n    }\n  }\n\n  .code-content {\n    margin-top: 20px;\n  }\n\n  .scan-qr {\n    display: flex;\n    justify-content: center;\n    width: 223px;\n    height: 223px;\n  }\n\n  .details {\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 20px;\n    text-align: center;\n    letter-spacing: 0.15px;\n    color: #333333;\n  }\n`;\n\nexport const ButtonSecondary = styled(Button)`\n  color: rgba(33, 65, 158, 1);\n`;\n\nexport const ButtonPrimary = styled(Button)`\n  background: #8dc544;\n  color: white;\n\n  &:hover {\n    color: #8dc544;\n  }\n`;\n","import TextField from \"@material-ui/core/TextField/TextField\";\nimport React from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PREFIX_PATH } from \"../helper/constants\";\nimport { ButtonPrimary, ButtonSecondary, StyledScanQr } from \"../styles\";\n\n//################################# APP ####################################\nfunction ReaderQrCode() {\n  const navigate = useNavigate();\n\n\n  // função responsavel por gerenciar os erros da leitura do QR CODE\n  const handleErrorWebCam = (error) => {\n    console.log(error);\n  };\n\n  // função executada quando há uma leitura do QR code pela camera do notebook\n  const handleScanWebCam = (result) => {\n    if (result) {\n      const parsed = JSON.parse(JSON.parse(result));\n      navigate(`${PREFIX_PATH}/reader-qrcode/form`, { state: parsed });\n    }\n  };\n\n  const handleHome = () => {\n    navigate(`${PREFIX_PATH}/`);\n  };\n\n  return (\n    <StyledScanQr>\n      <h1>Aponte a câmera do celular em direção ao QR Code</h1>\n\n      <div className=\"scan-qr\">\n        <QrReader\n          delay={300}\n          style={{ width: \"100%\" }}\n          onError={handleErrorWebCam}\n          onScan={handleScanWebCam}\n        />\n      </div>\n\n      <p className=\"details\">\n        Certifique-se que o QR Code esteja bem centralizado no quadrado verde\n      </p>\n\n      <div className=\"code-content\">\n        <TextField\n          id=\"outlined-helperText\"\n          label=\"ID Alpha\"\n          helperText=\"Código do Ativo\"\n          variant=\"outlined\"\n        />\n      </div>\n\n      <div className=\"action-buttons\">\n        <ButtonSecondary onClick={handleHome}>cancelar</ButtonSecondary>\n        <ButtonPrimary>Buscar Ativo</ButtonPrimary>\n      </div>\n    </StyledScanQr>\n  );\n}\n\nexport default ReaderQrCode;\n","import React from \"react\";\nimport {\n  Box,\n  FormLabel,\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  FormHelperText,\n  Checkbox,\n} from \"@material-ui/core\";\n\nfunction Electric({ form, setForm }) {\n  const [state, setState] = React.useState({\n    faltaEnergia: false,\n    chaveFusivel: false,\n    tensaoNormal: false,\n    cheiroQueimado: false,\n  });\n\n  const handleChange = (event) => {\n    const obj = { ...state, [event.target.name]: event.target.checked };\n\n    setState(obj);\n    setForm({ ...form, natureForm: obj });\n  };\n\n  const { faltaEnergia, chaveFusivel, tensaoNormal, cheiroQueimado } = state;\n\n  return (\n    <div>\n      <Box sx={{ display: \"flex\" }}>\n        <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\n          <FormLabel component=\"legend\">Marque as caixas</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={faltaEnergia}\n                  onChange={handleChange}\n                  name=\"faltaEnergia\"\n                />\n              }\n              label=\"Há falta de energia na vizinhança?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={chaveFusivel}\n                  onChange={handleChange}\n                  name=\"chaveFusivel\"\n                />\n              }\n              label=\"Chave fusível (canela, banana) aberta?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={tensaoNormal}\n                  onChange={handleChange}\n                  name=\"tensaoNormal\"\n                />\n              }\n              label=\"Tensão da unidade normal?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={cheiroQueimado}\n                  onChange={handleChange}\n                  name=\"cheiroQueimado\"\n                />\n              }\n              label=\"Cheiro de queimado?\"\n            />\n          </FormGroup>\n          <FormHelperText>\n            Marque as caixas de acordo com os problemas identificados\n          </FormHelperText>\n        </FormControl>\n      </Box>\n    </div>\n  );\n}\n\nexport default Electric;\n","import React from \"react\";\nimport {\n  Box,\n  FormLabel,\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  FormHelperText,\n  Checkbox,\n} from \"@material-ui/core\";\n\nfunction Mechanical({ form, setForm }) {\n  const [state, setState] = React.useState({\n    nivelSuccao: false,\n    valvulaSuccao: false,\n    valvulaRecalque: false,\n    vibracaoAnormal: false,\n    bombaTravada: false,\n    barulhoAnormal: false,\n    gaxetaVazamento: false,\n  });\n\n  const handleChange = (event) => {\n    const obj = { ...state, [event.target.name]: event.target.checked };\n\n    setState(obj);\n    setForm({ ...form, natureForm: obj });\n  };\n\n  const {\n    nivelSuccao,\n    valvulaSuccao,\n    valvulaRecalque,\n    vibracaoAnormal,\n    bombaTravada,\n    barulhoAnormal,\n    gaxetaVazamento,\n  } = state;\n\n  return (\n    <div>\n      <Box sx={{ display: \"flex\" }}>\n        <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\n          <FormLabel component=\"legend\">Marque as caixas</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={nivelSuccao}\n                  onChange={handleChange}\n                  name=\"nivelSuccao\"\n                />\n              }\n              label=\"O nível de succção está normal?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={valvulaSuccao}\n                  onChange={handleChange}\n                  name=\"valvulaSuccao\"\n                />\n              }\n              label=\"A válvula de sucção está aberta?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={valvulaRecalque}\n                  onChange={handleChange}\n                  name=\"valvulaRecalque\"\n                />\n              }\n              label=\"A válvula de recalque está aberta?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={vibracaoAnormal}\n                  onChange={handleChange}\n                  name=\"vibracaoAnormal\"\n                />\n              }\n              label=\"A vibração está anormal?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={bombaTravada}\n                  onChange={handleChange}\n                  name=\"bombaTravada\"\n                />\n              }\n              label=\"A bomba está travada?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={barulhoAnormal}\n                  onChange={handleChange}\n                  name=\"barulhoAnormal\"\n                />\n              }\n              label=\"Há um barulho anormal?\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={gaxetaVazamento}\n                  onChange={handleChange}\n                  name=\"gaxetaVazamento\"\n                />\n              }\n              label=\"A gaxeta está com vazamento?\"\n            />\n          </FormGroup>\n          <FormHelperText>\n            Marque as caixas de acordo com os problemas identificados\n          </FormHelperText>\n        </FormControl>\n      </Box>\n    </div>\n  );\n}\n\nexport default Mechanical;\n","import React from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nfunction Unidentified({ form, setForm }) {\n  const [state, setState] = React.useState({\n    description: \"\",\n  });\n\n  const handleChange = (event) => {\n    const obj = { ...state, description: event.target.value };\n\n    setState(obj);\n    setForm({ ...form, natureForm: obj });\n  };\n\n  return (\n    <div>\n      <TextField\n        required\n        id=\"outlined-textarea\"\n        label=\"Descrição adicional (necessária)\"\n        placeholder=\"Escreva aqui...\"\n        multiline\n        value={state.description}\n        onChange={(e) => handleChange(e, \"description\")}\n      />\n      <p>Caso sinta necessidade, entre em contato com o CCO:</p>\n      <Button\n        variant=\"contained\"\n        href=\"https://servicos.compesa.com.br\"\n        target=\"_blank\"\n      >\n        Entrar em contato com CCO\n      </Button>\n    </div>\n  );\n}\n\nexport default Unidentified;\n","import React from \"react\";\nimport { TextField, Box, MenuItem } from \"@material-ui/core\";\nimport Electric from \"./Electric\";\nimport Mechanical from \"./Mechanical\";\nimport Unidentified from \"./Unidentified\";\n\nfunction Form({ form, setForm }) {\n  const naturezas = [\n    {\n      value: 1,\n      label: \"Elétrico\",\n    },\n    {\n      value: 2,\n      label: \"Mecânico\",\n    },\n    {\n      value: 3,\n      label: \"Não identificada\",\n    },\n  ];\n\n  const handleChange = (event, attr) => {\n    setForm({ ...form, [attr]: event.target.value });\n  };\n\n  const handleNature = () => {\n    switch (form.nature) {\n      case 1:\n        return <Electric setForm={setForm} form={form} />;\n      case 2:\n        return <Mechanical setForm={setForm} form={form} />;\n      default:\n        return <Unidentified setForm={setForm} form={form} />;\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <div>\n        <TextField\n          required\n          id=\"ativo\"\n          label=\"Serial do ativo\"\n          placeholder=\"Insira aqui...\"\n          value={form.ativo}\n          disabled\n        />\n        <TextField\n          required\n          id=\"setor\"\n          label=\"Setor do ativo\"\n          placeholder=\"Insira aqui...\"\n          value={form.setor}\n          disabled\n        />\n        <TextField\n          required\n          id=\"tombamento\"\n          label=\"Serial do tombamento\"\n          placeholder=\"Insira aqui...\"\n          value={form.tombamento}\n          disabled\n        />\n        <TextField\n          required\n          id=\"unidade\"\n          label=\"Serial da unidade\"\n          placeholder=\"Insira aqui...\"\n          value={form.unidade}\n          disabled\n        />\n        <TextField\n          required\n          id=\"outlined-textarea\"\n          label=\"Descrição do problema\"\n          placeholder=\"Escreva aqui...\"\n          multiline\n          value={form.problemDescription}\n          onChange={(e) => handleChange(e, \"problemDescription\")}\n        />\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Seu nome\"\n          placeholder=\"Insira seu nome...\"\n          value={form.operatorName}\n          onChange={(e) => handleChange(e, \"operatorName\")}\n        />\n        <TextField\n          required\n          id=\"outlined-password-input\"\n          label=\"Escreva seu telefone\"\n          value={form.operatorPhone}\n          onChange={(e) => handleChange(e, \"operatorPhone\")}\n        />\n        <TextField\n          id=\"outlined-select-natureza\"\n          select\n          label=\"Natureza do problema\"\n          value={form.nature}\n          onChange={(e) => handleChange(e, \"nature\")}\n          helperText=\"Selecione a natureza do problema\"\n        >\n          {naturezas.map((tipo) => (\n            <MenuItem key={tipo.value} value={tipo.value}>\n              {tipo.label}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        {form.nature && handleNature()}\n      </div>\n    </Box>\n  );\n}\n\nexport default Form;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, makeStyles, Button } from \"@material-ui/core\";\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, set, ref, child, push } from \"firebase/database\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Form from \"./Form\";\n\n//################################# START Firebase Settings ####################################\n//quando depois eu explico para vocês como configura o firebase, por hora podem usar o meu\nconst firebaseConfig = {\n  apiKey:\n    \"AAAAplipsUI:APA91bGQbCDPCuHA-XQRVNJRvYysIqzPqJ4JXk4d9iowYwHgCel81VZCQYqgdqEQaVX2qGWmwyLjGrnkpKtAs56LhlFZaCdRHZMpn9XVLcxtEc7c5GeiD-uMuibIkDFAQVpfV7mtFduP\",\n  authDomain: \"summerjob-9c9bf.firebaseapp.com\",\n  databaseURL: \"https://summerjob-9c9bf-default-rtdb.firebaseio.com/\",\n};\nconst app = initializeApp(firebaseConfig);\n\n// Get a reference to the database service\nconst database = getDatabase(app);\n//################################# END Firebase Settings ####################################\n\nconst initialState = {\n  ativo: \"\",\n  tombamento: \"\",\n  unidade: \"\",\n  setor: \"\",\n  problemDescription: \"\",\n  operatorName: \"\",\n  operatorPhone: \"\",\n  nature: null,\n  natureForm: null,\n};\n\n//################################# APP ####################################\nfunction PmForm() {\n  const [form, setForm] = useState(initialState);\n  const navigate = useNavigate();\n  const { state } = useLocation();\n\n  useEffect(() => {\n    setForm(state);\n  }, [state]);\n\n  // carregando estilo customizado\n  const classes = useStyles();\n\n  const submitOrder = () => {\n    console.log(form);\n\n    // documentação para tempo real do firebase https://firebase.google.com/docs/database/web/start?authuser=0\n    const newPostKey = push(child(ref(database), \"ativos\")).key;\n\n    // const parsedData = JSON.parse(JSON.parse(scanResultWebCam));\n\n    set(ref(database, `ativos/${newPostKey}`), form);\n\n    navigate(\"/success\");\n  };\n\n  return (\n    <Card>\n      <h2 className={classes.title}>Formulário da PM</h2>\n      <CardContent>\n        {/* Parte do codigo HTML responsavel por gerar o QR CODE */}\n\n        {/* Parte do codigo HTML responsavel por Ler o QR CODE */}\n        <h3>Preencha os dados a seguir</h3>\n\n        <Form form={form} setForm={setForm} />\n        <Button\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={submitOrder}\n        >\n          Enviar PM\n        </Button>\n        {/* END Parte do codigo HTML responsavel por Ler o QR CODE */}\n      </CardContent>\n    </Card>\n  );\n}\n\n// Criação de um estilo customizado\nconst useStyles = makeStyles((theme) => ({\n  conatiner: {\n    marginTop: 10,\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"#3f51b5\",\n    color: \"#fff\",\n    padding: 20,\n  },\n  btn: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n}));\nexport default PmForm;\n","import React from \"react\";\nimport { Container, makeStyles, Card, CardContent } from \"@material-ui/core\";\n\n//################################# APP ####################################\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.conatiner}>\n      <Card>\n        <CardContent>\n          <h3>Sucesso</h3>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\n// Criação de um estilo customizado\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: 10,\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"#3f51b5\",\n    color: \"#fff\",\n    padding: 20,\n  },\n  btn: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n}));\nexport default App;\n","import { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\nimport * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function BasicMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const navigate = useNavigate();\n\n  const PREFIX_PATH = process.env.REACT_APP_PREFIX_PATH\n    ? process.env.REACT_APP_PREFIX_PATH\n    : \"\";\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleRoute = (route) => {\n    navigate(`${PREFIX_PATH}${route}`);\n    handleClose();\n  };\n\n  return (\n    <>\n      <IconButton\n        className=\"button-icon\"\n        id=\"basic-button\"\n        aria-controls={open ? \"basic-menu\" : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n      >\n        <MenuIcon></MenuIcon>\n      </IconButton>\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        clas\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n      >\n        <MenuItem onClick={() => handleRoute(\"/reader-qrcode\")}>\n          Escanear QR Code\n        </MenuItem>\n        <MenuItem onClick={() => handleRoute(\"/create-qrcode\")}>\n          Criar QR Code\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { PREFIX_PATH } from \"../helper/constants\";\nimport { StyledHeader } from \"../styles\";\nimport BasicMenu from \"./MenuHeader\";\n\nfunction Header() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [title, setTitle] = useState(\"Instruções de Uso\");\n\n  const deltaPng = `https://i.imgur.com/p4UauNl.jpg`;\n\n  useEffect(() => {\n    switch (location.pathname) {\n      case \"/\":\n        setTitle(\"Instruções de Uso\");\n        break;\n      case \"/reader-qrcode\":\n        setTitle(\"Leitor de QR Code\");\n        break;\n      case \"/create-qrcode\":\n        setTitle(\"Geração do QR Code\");\n        break;\n      default:\n        setTitle(\"Pedido de Manutenção\");\n    }\n  }, [location]);\n\n  const handleHome = () => {\n    navigate(`${PREFIX_PATH}/`);\n  };\n\n  return (\n    <StyledHeader>\n      <div className=\"content\">\n        <div className=\"content-left\">\n          <div className=\"image-container\" onClick={handleHome}>\n            <img src={deltaPng} alt=\"logo\" />\n          </div>\n          <h1>{title} </h1>\n        </div>\n        <BasicMenu></BasicMenu>\n      </div>\n    </StyledHeader>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PREFIX_PATH } from \"../helper/constants\";\nimport { ButtonPrimary, StyledManual } from \"../styles\";\n\nfunction UseManual() {\n  const navigate = useNavigate();\n  const srcImage = `${PREFIX_PATH}/assets/qrcode.png`;\n\n  console.log(process.env.PREFIX_PATH);\n  const handleButton = () => {\n    navigate(`${PREFIX_PATH}/reader-qrcode`);\n  };\n\n  return (\n    <StyledManual>\n      <h1>Seja bem-vindo(a) ao Delta!</h1>\n\n      <p>\n        O Sistema Delta permite a fácil identificação de ativos através de QR\n        Code, além do prático preenchimento e envio de Pedidos de Manutenção\n        (PM) para o Centro de Controle e Operação (CCO).\n      </p>\n\n      <div className=\"image-qr\">\n        <img src={srcImage} alt=\"qrCode\" />\n      </div>\n\n      <div className=\"instructions\">\n        <h1>Siga as intruções:</h1>\n\n        <div>\n          <span>1.</span>\n          <p>\n            Aponte a câmera do celular para o QR Code para que ocorra a leitura\n            da imagem\n          </p>\n        </div>\n        <div>\n          <span>2.</span>\n          <p>Após a leitura, receba os dados e informações sobre o ativo</p>\n        </div>\n        <div>\n          <span>3.</span>\n          <p>\n            Preencha o formulário do PM com todas as informações necessárias\n            Envie o PM para o CCO\n          </p>\n        </div>\n      </div>\n\n      <div className=\"action-button\">\n        <ButtonPrimary onClick={handleButton}>Ler QR Code</ButtonPrimary>\n      </div>\n    </StyledManual>\n  );\n}\n\nexport default UseManual;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { Container } from \"@material-ui/core\";\nimport CreateQrCode from \"./components/CreateQrcode\";\nimport ReaderQrCode from \"./components/ReaderQrCode\";\nimport PmForm from \"./components/PmForm\";\nimport SuccesForm from \"./components/SuccesForm\";\nimport Header from \"./components/Header\";\nimport UseManual from \"./components/UseManual\";\nimport { PREFIX_PATH } from \"./helper/constants\";\n\n//################################# APP ####################################\nfunction App() {\n  return (\n    <Container style={{ padding: 0 }}>\n      <Router>\n        <Header />\n\n        <Routes>\n          <Route exact path={`${PREFIX_PATH}/`} element={<UseManual />} />\n          <Route\n            exact\n            path={`${PREFIX_PATH}/create-qrcode`}\n            element={<CreateQrCode />}\n          />\n          <Route\n            exact\n            path={`${PREFIX_PATH}/reader-qrcode`}\n            element={<ReaderQrCode />}\n          />\n          <Route\n            exact\n            path={`${PREFIX_PATH}/reader-qrcode/form`}\n            element={<PmForm />}\n          />\n          <Route\n            exact\n            path={`${PREFIX_PATH}/success`}\n            element={<SuccesForm />}\n          />\n        </Routes>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}